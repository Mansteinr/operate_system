{"remainingRequest":"D:\\operate_system\\node_modules\\babel-loader\\lib\\index.js!D:\\operate_system\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\operate_system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\operate_system\\src\\components\\QualityAnalysis.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\operate_system\\src\\components\\QualityAnalysis.vue","mtime":1543376220520},{"path":"D:\\operate_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1542166466337},{"path":"D:\\operate_system\\node_modules\\babel-loader\\lib\\index.js","mtime":1542166452696},{"path":"D:\\operate_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1542166466337},{"path":"D:\\operate_system\\node_modules\\vue-loader\\lib\\index.js","mtime":1542166473519}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* eslint-disable */\nimport $http from '../common/js/api';\nimport moment from 'moment';\nimport Pagination from '../base/Pagination';\nexport default {\n  data: function data() {\n    return {\n      currentPage: 1,\n      pageSize: 10,\n      tatalPage: 0,\n      serviceArr: [],\n      serviceName: '',\n      loginName: '',\n      search: '',\n      customerArr: [],\n      tableData: [],\n      flag: false,\n      time: [new Date().getTime() - 3600 * 1000 * 24 * 7, new Date()],\n      pickerOptions2: {\n        shortcuts: [{\n          text: '最近一周',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近一个月',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近三个月',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      }\n    };\n  },\n  components: {\n    Pagination: Pagination\n  },\n  methods: {\n    changePage: function changePage(value) {\n      this[value.split('-')[0]] = value.split('-')[1] / 1;\n    },\n    getSummaries: function getSummaries(param) {\n      var _this = this;\n\n      var columns = param.columns,\n          data = param.data;\n      var sums = [];\n      columns.forEach(function (column, index) {\n        if (index === 0) {\n          sums[index] = '合计';\n          return;\n        }\n\n        if (index === 1 || index === 2 || index === 3) {\n          sums[index] = '-';\n          return;\n        }\n\n        var values = _this.tableData.map(function (item) {\n          return Number(item[column.property]);\n        });\n\n        if (!values.every(function (value) {\n          return isNaN(value);\n        })) {\n          sums[index] = values.reduce(function (prev, curr) {\n            var value = Number(curr);\n\n            if (!isNaN(value)) {\n              return prev + curr;\n            } else {\n              return prev;\n            }\n          }, 0);\n          sums[index];\n        } else {\n          sums[index] = '';\n        }\n      });\n      return sums;\n    },\n    services: function services() {\n      var _this2 = this;\n\n      var url = '/operation/down/queryServices';\n      $http(url, {}, 'get').then(function (res) {\n        _this2.serviceArr = res.resData;\n\n        if (_this2.serviceArr && _this2.serviceArr.length) {\n          _this2.serviceName = _this2.serviceArr[0].serviceName;\n\n          _this2.queryCustomersByService(_this2.serviceArr[0].serviceName);\n        }\n      });\n    },\n    queryCustomersByService: function queryCustomersByService(param) {\n      var _this3 = this;\n\n      var url = '/operation/down/queryCustomersByService/' + param;\n      $http(url, {}, 'get').then(function (res) {\n        _this3.customerArr = res.resData;\n\n        if (_this3.customerArr && _this3.customerArr.length) {\n          _this3.loginName = _this3.customerArr[0].loginName;\n        } else {\n          _this3.loginName = '';\n        }\n      });\n    },\n    UsageByResult: function UsageByResult(opt) {\n      var _this4 = this;\n\n      var url = '/operator/down/UsageByResult';\n      $http(url, opt).then(function (res) {\n        _this4.tableData = res.resData;\n        _this4.tatalPage = res.resData.length;\n      });\n    },\n    changeValue: function changeValue(value) {\n      this.queryCustomersByService(value);\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      if (val) {\n        this.pageSize = val;\n      } else {\n        this.pageSize = this.tableData.length;\n      }\n    },\n    filterTable: function filterTable(data) {\n      return !this.search || (data.serviceNameZh + '').toLowerCase().includes(this.search.toLowerCase()) || (data.serviceName + '').toLowerCase().includes(this.search.toLowerCase()) || data.resultCode.toLowerCase().includes(this.search.toLowerCase()) || (data.result + '').toLowerCase().includes(this.search.toLowerCase());\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.currentPage = val;\n    },\n    onSubmit: function onSubmit() {\n      var start = moment(this.time[0]).format('YYYY-MM-DD');\n      var end = moment(this.time[1]).format('YYYY-MM-DD');\n      var loginName = this.loginName;\n      var serviceName = this.serviceName;\n      var businessType = '';\n      var opt = {\n        start: start,\n        end: end,\n        loginName: loginName,\n        serviceName: serviceName,\n        businessType: businessType\n      };\n      this.UsageByResult(opt);\n    },\n    formatterMoney: function formatterMoney(value) {\n      return value.downCost = Math.round(value.downCost * 100) / 100;\n    }\n  },\n  mounted: function mounted() {\n    this.services();\n  },\n  computed: {\n    tableDataComputed: function tableDataComputed() {\n      if (this.tableData && this.tableData.length) {\n        var start = this.pageSize * (this.currentPage - 1);\n        var end = Math.min(this.pageSize * this.currentPage, this.tableData.length);\n        return this.tableData.slice(start, end);\n      } else {\n        return [];\n      }\n    }\n  }\n};",{"version":3,"sources":["QualityAnalysis.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"template-wrapper\">\r\n    <div class=\"card-wrapper\">\r\n      <div class=\"card-title\">\r\n        查询条件\r\n      </div>\r\n      <div class=\"card-container\">\r\n        <el-form :inline=\"true\" class=\"demo-form-inline\">\r\n          <el-form-item label=\"选择时间：\">\r\n            <el-date-picker\r\n              v-model=\"time\"\r\n              type=\"daterange\"\r\n              align=\"right\"\r\n              unlink-panels\r\n              range-separator=\"至\"\r\n              start-placeholder=\"开始日期\"\r\n              end-placeholder=\"结束日期\"\r\n              :picker-options=\"pickerOptions2\">\r\n            </el-date-picker>\r\n          </el-form-item>\r\n          <el-form-item label=\"服务名称：\">\r\n            <el-select v-model.trim=\"serviceName\"\r\n              filterable\r\n              @change=\"changeValue\"\r\n              placeholder=\"请选择\">\r\n              <el-option\r\n                v-for=\"item in serviceArr\"\r\n                :key=\"item.serviceName\"\r\n                :label=\"item.serviceNameZh\"\r\n                :value=\"item.serviceName\">\r\n                <span style=\"float: left\">{{ item.serviceNameZh }}</span>\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"客户类型：\">\r\n            <el-select v-model.trim=\"loginName\"\r\n              filterable\r\n              placeholder=\"请选择\">\r\n              <el-option\r\n                v-for=\"item in customerArr\"\r\n                :key=\"item.loginName\"\r\n                :label=\"item.customerName\"\r\n                :value=\"item.loginName\">\r\n                <span style=\"float: left\">{{ item.customerName }}</span>\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item class=\"card-query\">\r\n            <el-button type=\"primary\" @click=\"onSubmit\" round>查询</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n    </div>\r\n    <div class=\"card-wrapper card-content\">\r\n      <div class=\"card-title\">\r\n        查询结果\r\n      </div>\r\n      <div class=\"card-container\">\r\n         <el-table\r\n          :data=\"tableDataComputed.filter(data => filterTable(data))\"\r\n          :show-summary=true\r\n          :summary-method=\"getSummaries\"\r\n          style=\"width: 100%\">\r\n          <el-table-column\r\n            label=\"服务名\"\r\n            sortable\r\n            prop=\"serviceName\">\r\n          </el-table-column>\r\n          <el-table-column\r\n            label=\"服务名称\"\r\n            sortable\r\n            prop=\"serviceNameZh\">\r\n          </el-table-column>\r\n          <el-table-column\r\n            label=\"RESULT\"\r\n            sortable\r\n            prop=\"result\">\r\n          </el-table-column>\r\n          <el-table-column\r\n            label=\"resultCode\"\r\n            sortable\r\n            prop=\"resultCode\">\r\n          </el-table-column>\r\n          <el-table-column\r\n            label=\"共计使用量\"\r\n            sortable\r\n            prop=\"usedCount\">\r\n          </el-table-column>\r\n          <el-table-column\r\n            label=\"计费使用量\"\r\n            sortable\r\n            prop=\"downChargedCount\">\r\n          </el-table-column>\r\n          <el-table-column\r\n            align=\"right\">\r\n            <template slot=\"header\" slot-scope=\"slot\">\r\n              <el-input\r\n                v-model=\"search\"\r\n                size=\"mini\"\r\n                placeholder=\"输入关键字\"/>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n         <pagination @changePage=\"changePage\" :tatalPage=\"tatalPage\"></pagination>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable */\r\n  import $http from '../common/js/api'\r\n  import moment from 'moment'\r\n  import Pagination from '../base/Pagination'\r\n  export default {\r\n    data() {\r\n      return {\r\n        currentPage: 1,\r\n        pageSize: 10,\r\n        tatalPage: 0,\r\n        serviceArr: [],\r\n        serviceName: '',\r\n        loginName: '',\r\n        search: '',\r\n        customerArr: [],\r\n        tableData: [],\r\n        flag: false,\r\n        time: [new Date().getTime() - 3600 * 1000 * 24 * 7,new Date()],\r\n        pickerOptions2: {\r\n          shortcuts: [{\r\n            text: '最近一周',\r\n            onClick(picker) {\r\n              const end = new Date();\r\n              const start = new Date();\r\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n              picker.$emit('pick', [start, end]);\r\n            }\r\n          }, {\r\n            text: '最近一个月',\r\n            onClick(picker) {\r\n              const end = new Date();\r\n              const start = new Date();\r\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n              picker.$emit('pick', [start, end]);\r\n            }\r\n          }, {\r\n            text: '最近三个月',\r\n            onClick(picker) {\r\n              const end = new Date();\r\n              const start = new Date();\r\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\r\n              picker.$emit('pick', [start, end]);\r\n            }\r\n          }]\r\n        }\r\n      }\r\n    },\r\n    components: {\r\n      Pagination\r\n    },\r\n    methods: {\r\n      changePage (value) {\r\n        this[value.split('-')[0]] = value.split('-')[1] / 1\r\n      },\r\n      getSummaries(param) {\r\n        const { columns, data } = param\r\n        const sums = []\r\n        columns.forEach((column, index) => {\r\n          if (index === 0) {\r\n            sums[index] = '合计'\r\n            return\r\n          }\r\n          if (index === 1 || index === 2 || index === 3) {\r\n            sums[index] = '-'\r\n            return\r\n          }\r\n        const values = this.tableData.map(item => Number(item[column.property]))\r\n        if (!values.every(value => isNaN(value))) {\r\n          sums[index] = values.reduce((prev, curr) => {\r\n            const value = Number(curr)\r\n            if (!isNaN(value)) {\r\n              return prev + curr\r\n            } else {\r\n              return prev\r\n            }\r\n          }, 0)\r\n          sums[index]\r\n          } else {\r\n            sums[index] = ''\r\n          }\r\n        })\r\n        return sums\r\n      },\r\n      services () {\r\n        let url = '/operation/down/queryServices'\r\n        $http(url, {}, 'get').then((res) => {\r\n          this.serviceArr = res.resData\r\n          if (this.serviceArr && this.serviceArr.length) {\r\n            this.serviceName = this.serviceArr[0].serviceName\r\n            this.queryCustomersByService(this.serviceArr[0].serviceName)\r\n          }\r\n        })\r\n      },\r\n      queryCustomersByService (param) {\r\n        let url = '/operation/down/queryCustomersByService/' + param\r\n        $http(url, {}, 'get').then((res) => {\r\n          this.customerArr = res.resData\r\n          if (this.customerArr && this.customerArr.length) {\r\n            this.loginName = this.customerArr[0].loginName\r\n          } else {\r\n            this.loginName = ''\r\n          }\r\n        })\r\n      },\r\n      UsageByResult (opt) {\r\n        let url = '/operator/down/UsageByResult'\r\n        $http(url, opt).then((res) => {\r\n          this.tableData = res.resData\r\n          this.tatalPage = res.resData.length\r\n        })\r\n      },\r\n      changeValue (value) {\r\n        \r\n        this.queryCustomersByService(value)\r\n      },\r\n      handleSizeChange(val) {\r\n        if (val) {\r\n          this.pageSize = val\r\n        } else {\r\n          this.pageSize = this.tableData.length\r\n        }\r\n      },\r\n      filterTable (data) {\r\n        return !this.search || (data.serviceNameZh+'').toLowerCase().includes(this.search.toLowerCase()) || (data.serviceName+'').toLowerCase().includes(this.search.toLowerCase()) || data.resultCode.toLowerCase().includes(this.search.toLowerCase())  || (data.result+'').toLowerCase().includes(this.search.toLowerCase())\r\n      },\r\n      handleCurrentChange(val) {\r\n        this.currentPage = val\r\n      },\r\n      onSubmit () {\r\n        const start = moment(this.time[0]).format('YYYY-MM-DD')\r\n        const end = moment(this.time[1]).format('YYYY-MM-DD')\r\n        const loginName = this.loginName\r\n        const serviceName = this.serviceName\r\n        const businessType = ''\r\n        let opt = {\r\n          start,\r\n          end,\r\n          loginName,\r\n          serviceName,\r\n          businessType\r\n        }\r\n        this.UsageByResult(opt)\r\n      },\r\n      formatterMoney (value) {\r\n        return value.downCost = Math.round(value.downCost * 100) / 100\r\n      }\r\n    },\r\n    mounted() {\r\n      this.services()\r\n    },\r\n    computed: {\r\n      tableDataComputed () {\r\n        if (this.tableData && this.tableData.length) {\r\n          let start = this.pageSize * (this.currentPage -1)\r\n          let end = Math.min(this.pageSize * (this.currentPage), this.tableData.length)\r\n          return this.tableData.slice(start, end)\r\n        } else {\r\n          return []\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>"],"sourceRoot":"src\\components"}]}