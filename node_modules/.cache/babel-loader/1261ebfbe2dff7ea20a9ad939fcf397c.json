{"remainingRequest":"D:\\operate_system\\node_modules\\babel-loader\\lib\\index.js!D:\\operate_system\\src\\common\\js\\myCharts.js","dependencies":[{"path":"D:\\operate_system\\src\\common\\js\\myCharts.js","mtime":1543376220506},{"path":"D:\\operate_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1542166466337},{"path":"D:\\operate_system\\node_modules\\babel-loader\\lib\\index.js","mtime":1542166452696}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nvar color = ['rgba(44,181,171, 1)', 'rgba(44,181,171,.3)', 'rgba(145,191,93,1)', 'rgba(145,191,93, .3)', 'rgba(248,168,159,1)', 'rgba(248,168,159,.3)', 'rgba(138, 43, 226, 1)', 'rgba(220, 20, 60, 1)', 'rgba(0, 0, 139, 1)', 'rgba(255,140,0,1)', 'rgba(121,85,72,1)', 'rgba(124,252,0,1)', 'rgba(0,0,128,1)', 'rgba(158,158,158,1)', 'rgba(172,89,163,1)', 'rgba(53,231,255,1)', 'rgba(16,16,16,1)', 'rgba(52,135,158,1)'];\nexport function setLineData(title, xAxisData, series) {\n  var legendData = [];\n  var seriesOpt = [];\n  var arrLength = series.length > 21 ? 20 : series.length;\n\n  for (var i = 0; i < arrLength; i++) {\n    legendData.push(series[i].name);\n    seriesOpt.push({\n      \"name\": series[i].name,\n      type: 'line',\n      smooth: true,\n      //是否平滑曲线显示\n      lineStyle: {\n        //线条样式 \n        normal: {\n          width: 1,\n          color: color[i * 2]\n        }\n      },\n      areaStyle: {\n        //区域填充样式\n        normal: {\n          //线性渐变，前4个参数分别是x0,y0,x2,y2(范围0~1);相当于图形包围盒中的百分比。如果最后一个参数是‘true’，则该四个值是绝对像素位置。\n          color: color[i * 2 + 1]\n        }\n      },\n      itemStyle: {\n        //折现拐点标志的样式\n        normal: {\n          color: color[i * 2]\n        }\n      },\n      \"data\": series[i].data\n    });\n  }\n\n  var option = {\n    title: {\n      text: title,\n      left: '1%',\n      top: '-1%',\n      textStyle: {\n        fontSize: 16,\n        fontWeight: \"normal\",\n        fontFamily: \"微软雅黑\",\n        color: \"#36383c\"\n      }\n    },\n    tooltip: {\n      bordeRadius: 4,\n      borderWidth: 1,\n      borderColor: 'rgba(0,0,0,0.2)',\n      backgroundColor: 'rgba(255,255,255,0.9)',\n      padding: 0,\n      formatter: function formatter(params) {\n        var paramsName = '';\n        params.forEach(function (v) {\n          if (v.name) {\n            paramsName = v.name;\n          }\n        });\n        var color = \"#757b90\";\n        var a = \"<div style='background-color:\" + color + \";padding: 5px 10px;border:0;marging-top:1px;text-align:center;color:white;font-size: 14px;'>\" + paramsName + \"</div>\";\n        a += \"<div style='padding:5px;color:#36383c;font-size:14px;'>\";\n        params.forEach(function (v) {\n          a += \"<span style='margin-right:5px;display: inline-block;display: inline-block; height:8px;width: 8px;border: 2px solid \" + v.color + \";border-radius: 50%;'/></span>\" + v.seriesName + \"  :  \" + (v.value || '--') + \"<br>\";\n        });\n        a += \"</div>\";\n        return a;\n      },\n      trigger: 'axis',\n      textStyle: {\n        fontSize: 15,\n        color: \"#fff\"\n      },\n      axisPointer: {\n        lineStyle: {\n          color: '#00c1de'\n        }\n      }\n    },\n    legend: {\n      orient: 'horizontal',\n      bottom: 70,\n      left: \"4%\",\n      itemGap: 20,\n      data: legendData,\n      textStyle: {\n        color: '#6f7479',\n        fontSize: 12\n      }\n    },\n    grid: {\n      show: true,\n      left: \"8%\",\n      top: 34,\n      right: \"3%\",\n      x2: 50,\n      borderWidth: 0\n    },\n    toolbox: {\n      show: true,\n      feature: {\n        mark: {\n          show: true\n        },\n        dataView: {\n          show: false,\n          readOnly: false\n        },\n        magicType: {\n          show: true,\n          type: ['line', 'bar']\n        },\n        saveAsImage: {\n          show: true\n        },\n        restore: {\n          show: true\n        }\n      }\n    },\n    calculable: true,\n    xAxis: [{\n      type: 'category',\n      boundaryGap: false,\n      data: xAxisData,\n      axisLine: {\n        //坐标轴轴线相关设置。就是数学上的x轴\n        show: true,\n        lineStyle: {\n          color: '#00c1de',\n          width: 2\n        }\n      },\n      axisTick: {\n        show: false\n      },\n      axisLabel: {\n        align: \"right\",\n        textStyle: {\n          color: '#6f7479'\n        }\n      }\n    }],\n    yAxis: [{\n      type: 'value',\n      splitLine: {\n        show: true,\n        lineStyle: {\n          color: '#ececec'\n        }\n      },\n      axisLine: {\n        //坐标轴轴线相关设置。就是数学上的y轴\n        show: false,\n        lineStyle: {\n          color: 'rgba(170,172,178,0.53)'\n        }\n      },\n      axisLabel: {\n        textStyle: {\n          color: '#6f7479'\n        }\n      }\n    }],\n    series: seriesOpt\n  };\n\n  if (xAxisData.length > 20) {\n    var dataZoom = [];\n    dataZoom.push({\n      \"show\": true,\n      \"height\": 30,\n      \"bottom\": 30,\n      \"start\": 95,\n      \"end\": 100,\n      handleIcon: 'path://M306.1,413c0,2.2-1.8,4-4,4h-59.8c-2.2,0-4-1.8-4-4V200.8c0-2.2,1.8-4,4-4h59.8c2.2,0,4,1.8,4,4V413z',\n      handleSize: '110%',\n      handleStyle: {\n        color: \"#d3dee5\"\n      },\n      textStyle: {\n        color: \"#6f7479\"\n      },\n      borderColor: \"#90979c\"\n    }, {\n      type: 'inside',\n      realtime: true,\n      start: 20,\n      end: 80\n    });\n    option.dataZoom = dataZoom;\n    option.grid.bottom = 120 + Math.ceil(legendData.length / 8) * 20;\n  } else {\n    option.grid.bottom = 120;\n    option.grid.bottom = 120 + Math.ceil(legendData.length / 8) * 20;\n  }\n\n  return option;\n}\nexport function setOtherLineData(xAxisData, series) {\n  var legendData = [];\n  var arrLength = series.length > 21 ? 20 : series.length;\n\n  for (var i = 0; i < arrLength; i++) {\n    legendData.push(series[i].name);\n  }\n\n  var option = {\n    tooltip: {\n      bordeRadius: 4,\n      borderWidth: 1,\n      borderColor: 'rgba(0,0,0,0.2)',\n      backgroundColor: 'rgba(255,255,255,0.9)',\n      padding: 0,\n      formatter: function formatter(params) {\n        var paramsName = '';\n        params.forEach(function (v) {\n          if (v.name) {\n            paramsName = v.name;\n          }\n        });\n        var color = \"#757b90\";\n        var a = \"<div style='background-color:\" + color + \";padding: 5px 10px;border:0;marging-top:1px;text-align:center;color:white;font-size: 14px;'>\" + paramsName + \"</div>\";\n        a += \"<div style='padding:5px;color:#36383c;font-size:14px;'>\";\n        params.forEach(function (v) {\n          a += \"<span style='margin-right:5px;display: inline-block;display: inline-block; height:8px;width: 8px;border: 2px solid \" + v.color + \";border-radius: 50%;'/></span>\" + v.seriesName + \"  :  \" + (v.value || '--') + \"<br>\";\n        });\n        a += \"</div>\";\n        return a;\n      },\n      trigger: 'axis',\n      textStyle: {\n        fontSize: 15,\n        color: \"#fff\"\n      },\n      axisPointer: {\n        lineStyle: {\n          color: '#00c1de'\n        }\n      }\n    },\n    legend: {\n      orient: 'horizontal',\n      bottom: 70,\n      left: \"4%\",\n      itemGap: 20,\n      data: legendData,\n      textStyle: {\n        color: '#6f7479',\n        fontSize: 12\n      }\n    },\n    grid: {\n      show: true,\n      left: \"5%\",\n      top: 34,\n      right: \"5%\",\n      x2: 50,\n      borderWidth: 0\n    },\n    toolbox: {\n      show: true,\n      left: 'center',\n      feature: {\n        mark: {\n          show: true\n        },\n        dataView: {\n          show: false,\n          readOnly: false\n        },\n        magicType: {\n          show: true,\n          type: ['line', 'bar']\n        },\n        saveAsImage: {\n          show: true\n        },\n        restore: {\n          show: true\n        }\n      }\n    },\n    calculable: true,\n    xAxis: [{\n      type: 'category',\n      boundaryGap: false,\n      data: xAxisData,\n      axisLine: {\n        //坐标轴轴线相关设置。就是数学上的x轴\n        show: true,\n        lineStyle: {\n          color: '#00c1de',\n          width: 2\n        }\n      },\n      axisTick: {\n        show: false\n      },\n      axisLabel: {\n        align: \"right\",\n        textStyle: {\n          color: '#6f7479'\n        }\n      }\n    }],\n    yAxis: [{\n      name: '实时响应分析(ms)',\n      type: 'value',\n      splitLine: {\n        show: true,\n        lineStyle: {\n          color: '#ececec'\n        }\n      },\n      axisLine: {\n        //坐标轴轴线相关设置。就是数学上的y轴\n        show: false,\n        lineStyle: {\n          color: 'rgba(170,172,178,0.53)'\n        }\n      },\n      axisLabel: {\n        textStyle: {\n          color: '#6f7479'\n        }\n      }\n    }, {\n      name: '实时调用量(条)',\n      type: 'value',\n      splitLine: {\n        show: true,\n        lineStyle: {\n          color: '#ececec'\n        }\n      },\n      axisLine: {\n        //坐标轴轴线相关设置。就是数学上的y轴\n        show: false,\n        lineStyle: {\n          color: 'rgba(170,172,178,0.53)'\n        }\n      },\n      axisLabel: {\n        textStyle: {\n          color: '#6f7479'\n        }\n      }\n    }],\n    series: series\n  };\n\n  if (xAxisData.length > 20) {\n    var dataZoom = [];\n    dataZoom.push({\n      \"show\": true,\n      \"height\": 30,\n      \"bottom\": 30,\n      \"start\": 95,\n      \"end\": 100,\n      handleIcon: 'path://M306.1,413c0,2.2-1.8,4-4,4h-59.8c-2.2,0-4-1.8-4-4V200.8c0-2.2,1.8-4,4-4h59.8c2.2,0,4,1.8,4,4V413z',\n      handleSize: '110%',\n      handleStyle: {\n        color: \"#d3dee5\"\n      },\n      textStyle: {\n        color: \"#6f7479\"\n      },\n      borderColor: \"#90979c\"\n    }, {\n      type: 'inside',\n      realtime: true,\n      start: 20,\n      end: 80\n    });\n    option.dataZoom = dataZoom;\n    option.grid.bottom = 120 + Math.ceil(legendData.length / 8) * 20;\n  } else {\n    option.grid.bottom = 120;\n    option.grid.bottom = 120 + Math.ceil(legendData.length / 8) * 20;\n  }\n\n  return option;\n}",null]}