{"remainingRequest":"D:\\operate_system\\node_modules\\babel-loader\\lib\\index.js!D:\\operate_system\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\operate_system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\operate_system\\src\\components\\query-index\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\operate_system\\src\\components\\query-index\\index.vue","mtime":1543390036375},{"path":"D:\\operate_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1542166466337},{"path":"D:\\operate_system\\node_modules\\babel-loader\\lib\\index.js","mtime":1542166452696},{"path":"D:\\operate_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1542166466337},{"path":"D:\\operate_system\\node_modules\\vue-loader\\lib\\index.js","mtime":1542166473519}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport moment from 'moment';\nimport $http from '../../common/js/api';\nimport { setOtherLineData } from '../../common/js/myCharts';\nimport echarts from 'echarts';\nexport default {\n  data: function data() {\n    return {\n      currentPage: 1,\n      pageSize: 10,\n      tatalPage: 0,\n      formInline: {\n        user: '',\n        region: ''\n      },\n      pickerOptions2: {\n        disabledDate: function disabledDate(time) {\n          return time.getTime() > Date.now() || time.getTime() < new Date('2018-09-30');\n        },\n        shortcuts: [{\n          text: '最近一周',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近一个月',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      },\n      time: [new Date().getTime() - 3600 * 1000 * 24 * 7, new Date()],\n\n      /**默认时间最近七天 */\n      tableDataService: [],\n      tableDataDay: [],\n      search: ''\n    };\n  },\n  mounted: function mounted() {\n    this.UsageByDate();\n  },\n  computed: {\n    tableDataComputed: function tableDataComputed() {\n      if (this.tableDataService && this.tableDataService.length) {\n        var start = this.pageSize * (this.currentPage - 1);\n        var end = Math.min(this.pageSize * this.currentPage, this.tableDataService.length);\n        return this.tableDataService.slice(start, end);\n      } else {\n        return [];\n      }\n    }\n  },\n  methods: {\n    getSummaries: function getSummaries(param) {\n      var _this = this;\n\n      var columns = param.columns;\n      var sums = [];\n      columns.forEach(function (column, index) {\n        if (index === 0) {\n          sums[index] = '合计';\n          return;\n        }\n\n        var values = _this.tableDataService.map(function (item) {\n          return Number(item[column.property]);\n        });\n\n        if (!values.every(function (value) {\n          return isNaN(value);\n        })) {\n          sums[index] = values.reduce(function (prev, curr) {\n            var value = Number(curr);\n\n            if (!isNaN(value)) {\n              return prev + curr;\n            } else {\n              return prev;\n            }\n          }, 0);\n          sums[index];\n        } else {\n          sums[index] = '';\n        }\n      });\n      sums.forEach(function (v, k) {\n        if (Number(v)) {\n          sums[k] = Math.round(v * 100) / 100;\n        }\n      });\n      return sums;\n    },\n    onSubmit: function onSubmit() {\n      this.UsageByDate();\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      if (val) {\n        this.pageSize = val;\n      } else {\n        this.pageSize = this.tableDataDay.length;\n      }\n    },\n    filterTable: function filterTable(data) {\n      return !this.search || (data.chargeUsedCount + '').toLowerCase().includes(this.search.toLowerCase()) || (data.serviceNameZh + '').toLowerCase().includes(this.search.toLowerCase()) || data.serviceName.toLowerCase().includes(this.search.toLowerCase()) || (data.chargeUsedCount + '').toLowerCase().includes(this.search.toLowerCase());\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.currentPage = val;\n    },\n    UsageByDate: function UsageByDate() {\n      var url = '/operator/up/getOutServiceChargeInfoBySupplier';\n      var data = {\n        start: moment(this.time[0]).format('YYYY-MM-DD'),\n        end: moment(this.time[1]).format('YYYY-MM-DD'),\n        companyName: 'chaxunzhongxin'\n      };\n      var myChart = echarts.init(this.$refs.charts);\n      myChart.clear();\n      var that = this;\n      $http(url, data).then(function (res) {\n        that.tableDataService = [];\n        var xFiled = {},\n            finalArr = {};\n        that.tableDataDay = res.resData.dayCompany;\n        that.tableDataService = res.resData.serviceCompany;\n\n        if (that.tableDataDay && that.tableDataDay.length) {\n          that.tableDataDay.forEach(function (v, k) {\n            v.noChargeCount = v.usedCount - v.chargeUsedCount;\n            v.cost = v.cost.toFixed(2);\n            var dayKey = v.dayTime,\n                serviceKey = v.serviceName;\n\n            if (!finalArr[v.serviceName]) {\n              //是以服务名为主线  查看服务名是否已经存储\n              finalArr[v.serviceName] = {\n                name: v.serviceNameZh,\n                dataArr: []\n              };\n            }\n\n            if (xFiled[dayKey]) {\n              //如果日期存在  则将对应的服务名及对应的使用量生成key value\n              xFiled[dayKey][serviceKey] = v.usedCount;\n            } else {\n              xFiled[dayKey] = {}; //如果日期不存在  则生成一个空对象\n            }\n\n            xFiled[dayKey][serviceKey] = v.usedCount;\n          });\n        }\n\n        if (that.tableDataService && that.tableDataService.length) {\n          that.tableDataService.forEach(function (v, k) {\n            v.noChargeCount = v.usedCount - v.chargeUsedCount;\n            that.tableDataService[k].cost = that.tableDataService[k].cost.toFixed(2);\n          });\n        }\n\n        var nuqinexFild = [];\n\n        for (var k in xFiled) {\n          nuqinexFild.push(k);\n\n          for (var k1 in finalArr) {\n            if (xFiled[k][k1]) {\n              finalArr[k1].dataArr.push(xFiled[k][k1]);\n            } else {\n              finalArr[k1].dataArr.push(0);\n            }\n          }\n        }\n\n        var mycolor = ['#86D560', '#AF89D6', '#59ADF3', '#FF999A', '#FFCC67', '#2cb5ab', '#91bf5d', '#f8a89f', '#00FFFF', '#7FFFAA', '#2E8B57', '#F5F5DC', '#BC8F8F', '\t#808080'];\n        var k = 0,\n            lineData = [];\n\n        for (var k3 in finalArr) {\n          lineData.push({\n            name: finalArr[k3].name,\n            type: 'line',\n            smooth: true,\n            lineStyle: {\n              normal: {\n                width: 1,\n                color: mycolor[k]\n              }\n            },\n            areaStyle: {\n              normal: {\n                color: mycolor[k]\n              }\n            },\n            itemStyle: {\n              normal: {\n                color: mycolor[k]\n              }\n            },\n            \"data\": finalArr[k3].dataArr\n          });\n          k += 1;\n        }\n\n        myChart.setOption(setOtherLineData(nuqinexFild, lineData));\n\n        window.onresize = function () {\n          myChart.resize();\n        };\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"template-wrapper\">\r\n    <div class=\"card-wrapper\">\r\n      <div class=\"card-title\">\r\n        查询条件\r\n      </div>\r\n      <div class=\"card-container\">\r\n        <el-form :inline=\"true\" :model=\"formInline\" class=\"demo-form-inline\">\r\n          <el-form-item label=\"选择时间：\">\r\n            <div class=\"block\">\r\n              <el-date-picker\r\n                v-model=\"time\"\r\n                type=\"daterange\"\r\n                align=\"right\"\r\n                unlink-panels\r\n                range-separator=\"至\"\r\n                start-placeholder=\"开始日期\"\r\n                end-placeholder=\"结束日期\"\r\n                :picker-options=\"pickerOptions2\">\r\n              </el-date-picker>\r\n            </div>\r\n          </el-form-item>\r\n          <el-form-item class=\"card-query\">\r\n            <el-button type=\"primary\" @click=\"onSubmit\" round>查询</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n    </div>\r\n    <div class=\"card-wrapper card-content\">\r\n      <div class=\"card-title\">\r\n        查询结果\r\n      </div>\r\n      <div class=\"card-container\">\r\n        <div :class=\"tableDataDay.length ?'':'no-charts'\" ref=\"charts\" style=\"height:400px;\"></div>\r\n      </div>\r\n    </div>\r\n    <div class=\"card-wrapper card-content\">\r\n      <div class=\"card-title\">\r\n        查询结果\r\n      </div>\r\n      <div class=\"card-container\">\r\n        <el-table\r\n          :data=\"tableDataComputed.filter(data => filterTable(data))\"\r\n          :show-summary=true\r\n          :summary-method=\"getSummaries\"\r\n          style=\"width: 100%\">\r\n          <el-table-column\r\n            label=\"服务名称\"\r\n            sortable\r\n            prop=\"serviceNameZh\">\r\n          </el-table-column>\r\n          <el-table-column\r\n            label=\"共计条数\"\r\n            sortable\r\n            prop=\"usedCount\">\r\n          </el-table-column>\r\n          <el-table-column\r\n            label=\"计费条数\"\r\n            sortable\r\n            prop=\"chargeUsedCount\">\r\n          </el-table-column>\r\n          <el-table-column\r\n            label=\"不计费条数\"\r\n            sortable\r\n            prop=\"noChargeCount\">\r\n          </el-table-column>\r\n          <el-table-column\r\n            align=\"right\">\r\n            <template slot=\"header\" slot-scope=\"slot\">\r\n              <el-input\r\n                v-model=\"search\"\r\n                size=\"mini\"\r\n                placeholder=\"Type to search\"/>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n        <el-pagination\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page=\"currentPage\"\r\n          :page-sizes=\"[10, 20, 50, 'all']\"\r\n          :page-size=\"pageSize\"\r\n          background\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"tatalPage\">\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport moment from 'moment'\r\nimport $http from '../../common/js/api'\r\nimport { setOtherLineData } from '../../common/js/myCharts'\r\nimport echarts from 'echarts'\r\nexport default {\r\n  data () {\r\n    return {\r\n      currentPage: 1,\r\n      pageSize: 10,\r\n      tatalPage: 0,\r\n      formInline: {\r\n        user: '',\r\n        region: ''\r\n      },\r\n      pickerOptions2: {\r\n        disabledDate (time) {\r\n          return time.getTime() > Date.now() || time.getTime() < new Date('2018-09-30')\r\n        },\r\n        shortcuts: [{\r\n          text: '最近一周',\r\n          onClick (picker) {\r\n            const end = new Date();\r\n            const start = new Date();\r\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n            picker.$emit('pick', [start, end]);\r\n          }\r\n        }, {\r\n          text: '最近一个月',\r\n          onClick (picker) {\r\n            const end = new Date();\r\n            const start = new Date();\r\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n            picker.$emit('pick', [start, end]);\r\n          }\r\n        }]\r\n      },\r\n      time: [new Date().getTime() - 3600 * 1000 * 24 * 7, new Date()],/**默认时间最近七天 */\r\n      tableDataService: [],\r\n      tableDataDay: [],\r\n      search: ''\r\n    }\r\n  },\r\n  mounted () {\r\n    this.UsageByDate()\r\n  },\r\n  computed: {\r\n    tableDataComputed () {\r\n      if (this.tableDataService && this.tableDataService.length) {\r\n        let start = this.pageSize * (this.currentPage - 1)\r\n        let end = Math.min(this.pageSize * (this.currentPage), this.tableDataService.length)\r\n        return this.tableDataService.slice(start, end)\r\n      } else {\r\n        return []\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    getSummaries (param) {\r\n      const { columns } = param\r\n      const sums = []\r\n      columns.forEach((column, index) => {\r\n        if (index === 0) {\r\n          sums[index] = '合计'\r\n          return\r\n        }\r\n        const values = this.tableDataService.map(item => Number(item[column.property]))\r\n        if (!values.every(value => isNaN(value))) {\r\n          sums[index] = values.reduce((prev, curr) => {\r\n            const value = Number(curr)\r\n            if (!isNaN(value)) {\r\n              return prev + curr\r\n            } else {\r\n              return prev\r\n            }\r\n          }, 0)\r\n          sums[index]\r\n        } else {\r\n          sums[index] = ''\r\n        }\r\n      })\r\n      sums.forEach((v, k) => {\r\n        if (Number(v)) {\r\n          sums[k] = Math.round(v * 100) / 100\r\n        }\r\n      })\r\n      return sums\r\n    },\r\n    onSubmit () {\r\n      this.UsageByDate()\r\n    },\r\n    handleSizeChange (val) {\r\n      if (val) {\r\n        this.pageSize = val\r\n      } else {\r\n        this.pageSize = this.tableDataDay.length\r\n      }\r\n    },\r\n    filterTable (data) {\r\n      return !this.search || (data.chargeUsedCount + '').toLowerCase().includes(this.search.toLowerCase()) || (data.serviceNameZh + '').toLowerCase().includes(this.search.toLowerCase()) || data.serviceName.toLowerCase().includes(this.search.toLowerCase()) || (data.chargeUsedCount + '').toLowerCase().includes(this.search.toLowerCase())\r\n    },\r\n    handleCurrentChange (val) {\r\n      this.currentPage = val\r\n    },\r\n    UsageByDate () {\r\n      let url = '/operator/up/getOutServiceChargeInfoBySupplier'\r\n      let data = {\r\n        start: moment(this.time[0]).format('YYYY-MM-DD'),\r\n        end: moment(this.time[1]).format('YYYY-MM-DD'),\r\n        companyName: 'chaxunzhongxin'\r\n      }\r\n      var myChart = echarts.init(this.$refs.charts)\r\n      myChart.clear()\r\n      let that = this\r\n      $http(url, data).then((res) => {\r\n        that.tableDataService = []\r\n        var xFiled = {},\r\n          finalArr = {}\r\n        that.tableDataDay = res.resData.dayCompany\r\n        that.tableDataService = res.resData.serviceCompany\r\n        if (that.tableDataDay && that.tableDataDay.length) {\r\n          that.tableDataDay.forEach((v, k) => {\r\n            v.noChargeCount = v.usedCount - v.chargeUsedCount\r\n            v.cost = v.cost.toFixed(2)\r\n            var dayKey = v.dayTime,\r\n              serviceKey = v.serviceName\r\n            if (!finalArr[v.serviceName]) {//是以服务名为主线  查看服务名是否已经存储\r\n              finalArr[v.serviceName] = {\r\n                name: v.serviceNameZh,\r\n                dataArr: []\r\n              }\r\n            }\r\n            if (xFiled[dayKey]) {//如果日期存在  则将对应的服务名及对应的使用量生成key value\r\n              xFiled[dayKey][serviceKey] = v.usedCount\r\n            } else {\r\n              xFiled[dayKey] = {};//如果日期不存在  则生成一个空对象\r\n            }\r\n            xFiled[dayKey][serviceKey] = v.usedCount\r\n          })\r\n        }\r\n        if (that.tableDataService && that.tableDataService.length) {\r\n          that.tableDataService.forEach((v, k) => {\r\n            v.noChargeCount = v.usedCount - v.chargeUsedCount\r\n            that.tableDataService[k].cost = that.tableDataService[k].cost.toFixed(2)\r\n          })\r\n        }\r\n\r\n\r\n        var nuqinexFild = []\r\n        for (var k in xFiled) {\r\n          nuqinexFild.push(k)\r\n          for (let k1 in finalArr) {\r\n            if (xFiled[k][k1]) {\r\n              finalArr[k1].dataArr.push(xFiled[k][k1])\r\n            } else {\r\n              finalArr[k1].dataArr.push(0)\r\n            }\r\n          }\r\n        }\r\n        var mycolor = ['#86D560', '#AF89D6', '#59ADF3', '#FF999A', '#FFCC67', '#2cb5ab', '#91bf5d', '#f8a89f', '#00FFFF', '#7FFFAA', '#2E8B57', '#F5F5DC', '#BC8F8F', '\t#808080'];\r\n        var k = 0,\r\n          lineData = []\r\n        for (let k3 in finalArr) {\r\n          lineData.push({\r\n            name: finalArr[k3].name,\r\n            type: 'line',\r\n            smooth: true,\r\n            lineStyle: {\r\n              normal: {\r\n                width: 1,\r\n                color: mycolor[k]\r\n              }\r\n            },\r\n            areaStyle: {\r\n              normal: {\r\n                color: mycolor[k]\r\n              }\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                color: mycolor[k]\r\n              }\r\n            },\r\n            \"data\": finalArr[k3].dataArr\r\n          })\r\n          k += 1\r\n        }\r\n        myChart.setOption(setOtherLineData(nuqinexFild, lineData))\r\n        window.onresize = function () {\r\n          myChart.resize()\r\n        }\r\n      }).catch(error => {\r\n        console.log(error)\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped lang=\"stylus\" rel=\"stylesheet/stylus\">\r\n</style>\r\n"],"sourceRoot":"src\\components\\query-index"}]}