{"remainingRequest":"D:\\operate_system\\node_modules\\babel-loader\\lib\\index.js!D:\\operate_system\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\operate_system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\operate_system\\src\\components\\query-index\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\operate_system\\src\\components\\query-index\\index.vue","mtime":1543390036375},{"path":"D:\\operate_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1542166466337},{"path":"D:\\operate_system\\node_modules\\babel-loader\\lib\\index.js","mtime":1542166452696},{"path":"D:\\operate_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1542166466337},{"path":"D:\\operate_system\\node_modules\\vue-loader\\lib\\index.js","mtime":1542166473519}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport moment from 'moment';\nimport $http from '../../common/js/api';\nimport { setOtherLineData } from '../../common/js/myCharts';\nimport echarts from 'echarts';\nexport default {\n  data: function data() {\n    return {\n      currentPage: 1,\n      pageSize: 10,\n      tatalPage: 0,\n      formInline: {\n        user: '',\n        region: ''\n      },\n      pickerOptions2: {\n        disabledDate: function disabledDate(time) {\n          return time.getTime() > Date.now() || time.getTime() < new Date('2018-09-30');\n        },\n        shortcuts: [{\n          text: '最近一周',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近一个月',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      },\n      time: [new Date().getTime() - 3600 * 1000 * 24 * 7, new Date()],\n\n      /**默认时间最近七天 */\n      tableDataService: [],\n      tableDataDay: [],\n      search: ''\n    };\n  },\n  mounted: function mounted() {\n    this.UsageByDate();\n  },\n  computed: {\n    tableDataComputed: function tableDataComputed() {\n      if (this.tableDataService && this.tableDataService.length) {\n        var start = this.pageSize * (this.currentPage - 1);\n        var end = Math.min(this.pageSize * this.currentPage, this.tableDataService.length);\n        return this.tableDataService.slice(start, end);\n      } else {\n        return [];\n      }\n    }\n  },\n  methods: {\n    getSummaries: function getSummaries(param) {\n      var _this = this;\n\n      var columns = param.columns;\n      var sums = [];\n      columns.forEach(function (column, index) {\n        if (index === 0) {\n          sums[index] = '合计';\n          return;\n        }\n\n        var values = _this.tableDataService.map(function (item) {\n          return Number(item[column.property]);\n        });\n\n        if (!values.every(function (value) {\n          return isNaN(value);\n        })) {\n          sums[index] = values.reduce(function (prev, curr) {\n            var value = Number(curr);\n\n            if (!isNaN(value)) {\n              return prev + curr;\n            } else {\n              return prev;\n            }\n          }, 0);\n          sums[index];\n        } else {\n          sums[index] = '';\n        }\n      });\n      sums.forEach(function (v, k) {\n        if (Number(v)) {\n          sums[k] = Math.round(v * 100) / 100;\n        }\n      });\n      return sums;\n    },\n    onSubmit: function onSubmit() {\n      this.UsageByDate();\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      if (val) {\n        this.pageSize = val;\n      } else {\n        this.pageSize = this.tableDataDay.length;\n      }\n    },\n    filterTable: function filterTable(data) {\n      return !this.search || (data.chargeUsedCount + '').toLowerCase().includes(this.search.toLowerCase()) || (data.serviceNameZh + '').toLowerCase().includes(this.search.toLowerCase()) || data.serviceName.toLowerCase().includes(this.search.toLowerCase()) || (data.chargeUsedCount + '').toLowerCase().includes(this.search.toLowerCase());\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.currentPage = val;\n    },\n    UsageByDate: function UsageByDate() {\n      var url = '/operator/up/getOutServiceChargeInfoBySupplier';\n      var data = {\n        start: moment(this.time[0]).format('YYYY-MM-DD'),\n        end: moment(this.time[1]).format('YYYY-MM-DD'),\n        companyName: 'chaxunzhongxin'\n      };\n      var myChart = echarts.init(this.$refs.charts);\n      myChart.clear();\n      var that = this;\n      $http(url, data).then(function (res) {\n        that.tableDataService = [];\n        var xFiled = {},\n            finalArr = {};\n        that.tableDataDay = res.resData.dayCompany;\n        that.tableDataService = res.resData.serviceCompany;\n\n        if (that.tableDataDay && that.tableDataDay.length) {\n          that.tableDataDay.forEach(function (v, k) {\n            v.noChargeCount = v.usedCount - v.chargeUsedCount;\n            v.cost = v.cost.toFixed(2);\n            var dayKey = v.dayTime,\n                serviceKey = v.serviceName;\n\n            if (!finalArr[v.serviceName]) {\n              //是以服务名为主线  查看服务名是否已经存储\n              finalArr[v.serviceName] = {\n                name: v.serviceNameZh,\n                dataArr: []\n              };\n            }\n\n            if (xFiled[dayKey]) {\n              //如果日期存在  则将对应的服务名及对应的使用量生成key value\n              xFiled[dayKey][serviceKey] = v.usedCount;\n            } else {\n              xFiled[dayKey] = {}; //如果日期不存在  则生成一个空对象\n            }\n\n            xFiled[dayKey][serviceKey] = v.usedCount;\n          });\n        }\n\n        if (that.tableDataService && that.tableDataService.length) {\n          that.tableDataService.forEach(function (v, k) {\n            v.noChargeCount = v.usedCount - v.chargeUsedCount;\n            that.tableDataService[k].cost = that.tableDataService[k].cost.toFixed(2);\n          });\n        }\n\n        var nuqinexFild = [];\n\n        for (var k in xFiled) {\n          nuqinexFild.push(k);\n\n          for (var k1 in finalArr) {\n            if (xFiled[k][k1]) {\n              finalArr[k1].dataArr.push(xFiled[k][k1]);\n            } else {\n              finalArr[k1].dataArr.push(0);\n            }\n          }\n        }\n\n        var mycolor = ['#86D560', '#AF89D6', '#59ADF3', '#FF999A', '#FFCC67', '#2cb5ab', '#91bf5d', '#f8a89f', '#00FFFF', '#7FFFAA', '#2E8B57', '#F5F5DC', '#BC8F8F', '\t#808080'];\n        var k = 0,\n            lineData = [];\n\n        for (var k3 in finalArr) {\n          lineData.push({\n            name: finalArr[k3].name,\n            type: 'line',\n            smooth: true,\n            lineStyle: {\n              normal: {\n                width: 1,\n                color: mycolor[k]\n              }\n            },\n            areaStyle: {\n              normal: {\n                color: mycolor[k]\n              }\n            },\n            itemStyle: {\n              normal: {\n                color: mycolor[k]\n              }\n            },\n            \"data\": finalArr[k3].dataArr\n          });\n          k += 1;\n        }\n\n        myChart.setOption(setOtherLineData(nuqinexFild, lineData));\n\n        window.onresize = function () {\n          myChart.resize();\n        };\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }\n};",null]}