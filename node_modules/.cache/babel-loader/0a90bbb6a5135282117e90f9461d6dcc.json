{"remainingRequest":"D:\\operate_system\\node_modules\\thread-loader\\dist\\cjs.js!D:\\operate_system\\node_modules\\babel-loader\\lib\\index.js!D:\\operate_system\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\operate_system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\operate_system\\src\\components\\SensitiveWord.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\operate_system\\src\\components\\SensitiveWord.vue","mtime":1543376220530},{"path":"D:\\operate_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1542166466337},{"path":"D:\\operate_system\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1542166472176},{"path":"D:\\operate_system\\node_modules\\babel-loader\\lib\\index.js","mtime":1542166452696},{"path":"D:\\operate_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1542166466337},{"path":"D:\\operate_system\\node_modules\\vue-loader\\lib\\index.js","mtime":1542166473519}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport $http from '../common/js/api';\nimport { showModal } from '../utils';\nexport default {\n  data: function data() {\n    return {\n      multipleSelection: [],\n      formInline: {\n        illegalWords: ''\n      },\n      illegalWordsArr: []\n    };\n  },\n  mounted: function mounted() {\n    this.searchIllegalWords();\n  },\n  methods: {\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n    onSubmit: function onSubmit() {\n      this.searchIllegalWords();\n    },\n    searchIllegalWords: function searchIllegalWords() {\n      var _this = this;\n\n      var url = '/msc/searchIllegalWords';\n      $http(url, this.formInline).then(function (res) {\n        _this.illegalWordsArr = [];\n        _this.illegalWordsArr = JSON.parse(res.RESULT_DATA).rows;\n      });\n    },\n    add: function add() {\n      var _this2 = this;\n\n      var url = '/msc/addIllegalWords';\n      $http(url, this.formInline).then(function (res) {\n        if (res.RESULT === '0') {\n          _this2.formInline.illegalWords = '';\n          showModal(res.RESULT_MSG);\n\n          _this2.searchIllegalWords();\n        } else {\n          showModal(res.RESULT_MSG, 'warning');\n        }\n      });\n    },\n    removeIllegalWords: function removeIllegalWords(opt) {\n      var _this3 = this;\n\n      var url = '/msc/removeIllegalWords';\n      this.$confirm('确定删除该敏感词?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        $http(url, opt).then(function (res) {\n          if (res.RESULT === '0') {\n            showModal(res.RESULT_MSG);\n\n            _this3.searchIllegalWords();\n          } else {\n            showModal(res.RESULT_MSG, 'warning');\n          }\n        });\n      }).catch(function () {\n        _this3.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n    // 单个删除\n    deleteRow: function deleteRow(index, rows) {\n      var opt = {\n        ids: rows[index].id\n      };\n      this.removeIllegalWords(opt);\n    },\n    // 批量删除\n    deleteMut: function deleteMut() {\n      if (!this.multipleSelection.length) {\n        showModal('请选择删除的敏感词', 'warning');\n        return;\n      }\n\n      var ids = [];\n      this.multipleSelection.forEach(function (v) {\n        ids.push(v.id);\n      });\n      this.removeIllegalWords({\n        ids: ids.join(',')\n      });\n    }\n  }\n};",{"version":3,"sources":["SensitiveWord.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n   <div class=\"template-wrapper\">\r\n    <div class=\"card-wrapper\">\r\n      <div class=\"card-title\">\r\n        查询条件\r\n      </div>\r\n      <div class=\"card-container\">\r\n        <el-form :inline=\"true\" :model=\"formInline\" class=\"demo-form-inline\">\r\n          <el-form-item label=\"敏感词：\">\r\n            <el-input v-model.trim=\"formInline.illegalWords\" placeholder=\"多个以；隔开\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item class=\"card-query\">\r\n            <el-button type=\"success\" @click=\"add\" round>新增</el-button>\r\n            <el-button type=\"primary\" @click=\"onSubmit\" round>查询</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n    </div>\r\n    <div class=\"card-wrapper card-content\">\r\n      <div class=\"card-title\">\r\n        查询结果\r\n        <el-button type=\"primary\" title=\"批量删除\" @click=\"deleteMut\" size=\"mini\" icon=\"el-icon-delete\"></el-button>\r\n      </div>\r\n      <div class=\"card-container\">\r\n        <el-table\r\n          ref=\"multipleTable\"\r\n          :data=\"illegalWordsArr\"\r\n          tooltip-effect=\"dark\"\r\n          style=\"width: 100%\"\r\n          @selection-change=\"handleSelectionChange\">\r\n          <el-table-column\r\n            type=\"selection\"\r\n            width=\"55\">\r\n          </el-table-column>\r\n          <el-table-column\r\n            label=\"敏感词\">\r\n            <template slot-scope=\"scope\">{{ scope.row.illegalWord }}</template>\r\n          </el-table-column>\r\n          <el-table-column\r\n            prop=\"updateTime\"\r\n            label=\"添加时间\">\r\n          </el-table-column>\r\n           <el-table-column\r\n              fixed=\"right\"\r\n              label=\"操作\"\r\n              width=\"120\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button\r\n                  @click.native.prevent=\"deleteRow(scope.$index, illegalWordsArr)\"\r\n                  type=\"text\"\r\n                  size=\"small\">\r\n                  移除\r\n                </el-button>\r\n              </template>\r\n            </el-table-column>\r\n        </el-table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import $http from '../common/js/api'\r\n  import { showModal } from '../utils'\r\n  export default {\r\n    data() {\r\n      return {\r\n        multipleSelection: [],\r\n        formInline: {\r\n          illegalWords: ''\r\n        },\r\n        illegalWordsArr: []\r\n      }\r\n    },\r\n    mounted() {\r\n      this.searchIllegalWords()\r\n    },\r\n    methods: {\r\n      handleSelectionChange(val) {\r\n        this.multipleSelection = val\r\n      },\r\n      onSubmit () {\r\n        this.searchIllegalWords()\r\n      },\r\n      searchIllegalWords () {\r\n        let url = '/msc/searchIllegalWords'\r\n        $http(url, this.formInline).then((res) => {\r\n          this.illegalWordsArr = []\r\n          this.illegalWordsArr = JSON.parse(res.RESULT_DATA).rows\r\n        })\r\n      },\r\n      add () {\r\n        let url = '/msc/addIllegalWords'\r\n        $http(url, this.formInline).then((res) => {\r\n          if (res.RESULT === '0') {\r\n            this.formInline.illegalWords = ''\r\n            showModal(res.RESULT_MSG)\r\n            this.searchIllegalWords()\r\n          } else {\r\n            showModal(res.RESULT_MSG, 'warning')\r\n          }\r\n        })\r\n      },\r\n      removeIllegalWords (opt) {\r\n        let url = '/msc/removeIllegalWords'\r\n        this.$confirm('确定删除该敏感词?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          $http(url, opt).then((res) => {\r\n            if (res.RESULT === '0') {\r\n              showModal(res.RESULT_MSG)\r\n              this.searchIllegalWords()\r\n            } else {\r\n              showModal(res.RESULT_MSG, 'warning')\r\n            }\r\n          })\r\n        }).catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '已取消删除'\r\n          })       \r\n        })\r\n      },\r\n      // 单个删除\r\n      deleteRow(index, rows) {\r\n        let opt = {ids: rows[index].id}\r\n        this.removeIllegalWords(opt)\r\n      },\r\n      // 批量删除\r\n      deleteMut () {\r\n        if (!this.multipleSelection.length) {\r\n          showModal('请选择删除的敏感词', 'warning')\r\n          return\r\n        }\r\n        let ids = []\r\n        this.multipleSelection.forEach(v => {\r\n          ids.push(v.id)\r\n        })\r\n        this.removeIllegalWords({ids : ids.join(',')})\r\n      }\r\n    },\r\n  }\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped lang=\"stylus\" rel=\"stylesheet/stylus\">\r\n</style>\r\n"],"sourceRoot":"src\\components"}]}