{"remainingRequest":"D:\\operate_system\\node_modules\\babel-loader\\lib\\index.js!D:\\operate_system\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\operate_system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\operate_system\\src\\components\\QualityAnalysis.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\operate_system\\src\\components\\QualityAnalysis.vue","mtime":1543376220520},{"path":"D:\\operate_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1542166466337},{"path":"D:\\operate_system\\node_modules\\babel-loader\\lib\\index.js","mtime":1542166452696},{"path":"D:\\operate_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1542166466337},{"path":"D:\\operate_system\\node_modules\\vue-loader\\lib\\index.js","mtime":1542166473519}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* eslint-disable */\nimport $http from '../common/js/api';\nimport moment from 'moment';\nimport Pagination from '../base/Pagination';\nexport default {\n  data: function data() {\n    return {\n      currentPage: 1,\n      pageSize: 10,\n      tatalPage: 0,\n      serviceArr: [],\n      serviceName: '',\n      loginName: '',\n      search: '',\n      customerArr: [],\n      tableData: [],\n      flag: false,\n      time: [new Date().getTime() - 3600 * 1000 * 24 * 7, new Date()],\n      pickerOptions2: {\n        shortcuts: [{\n          text: '最近一周',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近一个月',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近三个月',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      }\n    };\n  },\n  components: {\n    Pagination: Pagination\n  },\n  methods: {\n    changePage: function changePage(value) {\n      this[value.split('-')[0]] = value.split('-')[1] / 1;\n    },\n    getSummaries: function getSummaries(param) {\n      var _this = this;\n\n      var columns = param.columns,\n          data = param.data;\n      var sums = [];\n      columns.forEach(function (column, index) {\n        if (index === 0) {\n          sums[index] = '合计';\n          return;\n        }\n\n        if (index === 1 || index === 2 || index === 3) {\n          sums[index] = '-';\n          return;\n        }\n\n        var values = _this.tableData.map(function (item) {\n          return Number(item[column.property]);\n        });\n\n        if (!values.every(function (value) {\n          return isNaN(value);\n        })) {\n          sums[index] = values.reduce(function (prev, curr) {\n            var value = Number(curr);\n\n            if (!isNaN(value)) {\n              return prev + curr;\n            } else {\n              return prev;\n            }\n          }, 0);\n          sums[index];\n        } else {\n          sums[index] = '';\n        }\n      });\n      return sums;\n    },\n    services: function services() {\n      var _this2 = this;\n\n      var url = '/operation/down/queryServices';\n      $http(url, {}, 'get').then(function (res) {\n        _this2.serviceArr = res.resData;\n\n        if (_this2.serviceArr && _this2.serviceArr.length) {\n          _this2.serviceName = _this2.serviceArr[0].serviceName;\n\n          _this2.queryCustomersByService(_this2.serviceArr[0].serviceName);\n        }\n      });\n    },\n    queryCustomersByService: function queryCustomersByService(param) {\n      var _this3 = this;\n\n      var url = '/operation/down/queryCustomersByService/' + param;\n      $http(url, {}, 'get').then(function (res) {\n        _this3.customerArr = res.resData;\n\n        if (_this3.customerArr && _this3.customerArr.length) {\n          _this3.loginName = _this3.customerArr[0].loginName;\n        } else {\n          _this3.loginName = '';\n        }\n      });\n    },\n    UsageByResult: function UsageByResult(opt) {\n      var _this4 = this;\n\n      var url = '/operator/down/UsageByResult';\n      $http(url, opt).then(function (res) {\n        _this4.tableData = res.resData;\n        _this4.tatalPage = res.resData.length;\n      });\n    },\n    changeValue: function changeValue(value) {\n      this.queryCustomersByService(value);\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      if (val) {\n        this.pageSize = val;\n      } else {\n        this.pageSize = this.tableData.length;\n      }\n    },\n    filterTable: function filterTable(data) {\n      return !this.search || (data.serviceNameZh + '').toLowerCase().includes(this.search.toLowerCase()) || (data.serviceName + '').toLowerCase().includes(this.search.toLowerCase()) || data.resultCode.toLowerCase().includes(this.search.toLowerCase()) || (data.result + '').toLowerCase().includes(this.search.toLowerCase());\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.currentPage = val;\n    },\n    onSubmit: function onSubmit() {\n      var start = moment(this.time[0]).format('YYYY-MM-DD');\n      var end = moment(this.time[1]).format('YYYY-MM-DD');\n      var loginName = this.loginName;\n      var serviceName = this.serviceName;\n      var businessType = '';\n      var opt = {\n        start: start,\n        end: end,\n        loginName: loginName,\n        serviceName: serviceName,\n        businessType: businessType\n      };\n      this.UsageByResult(opt);\n    },\n    formatterMoney: function formatterMoney(value) {\n      return value.downCost = Math.round(value.downCost * 100) / 100;\n    }\n  },\n  mounted: function mounted() {\n    this.services();\n  },\n  computed: {\n    tableDataComputed: function tableDataComputed() {\n      if (this.tableData && this.tableData.length) {\n        var start = this.pageSize * (this.currentPage - 1);\n        var end = Math.min(this.pageSize * this.currentPage, this.tableData.length);\n        return this.tableData.slice(start, end);\n      } else {\n        return [];\n      }\n    }\n  }\n};",null]}