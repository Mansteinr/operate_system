{"remainingRequest":"D:\\operate_system\\node_modules\\thread-loader\\dist\\cjs.js!D:\\operate_system\\node_modules\\babel-loader\\lib\\index.js!D:\\operate_system\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\operate_system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\operate_system\\src\\components\\SupplierAnalysis.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\operate_system\\src\\components\\SupplierAnalysis.vue","mtime":1543376220537},{"path":"D:\\operate_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1542166466337},{"path":"D:\\operate_system\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1542166472176},{"path":"D:\\operate_system\\node_modules\\babel-loader\\lib\\index.js","mtime":1542166452696},{"path":"D:\\operate_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1542166466337},{"path":"D:\\operate_system\\node_modules\\vue-loader\\lib\\index.js","mtime":1542166473519}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport $http from '../common/js/api';\nimport moment from 'moment';\nimport { setOtherLineData } from '../common/js/myCharts';\nimport echarts from 'echarts';\nexport default {\n  data: function data() {\n    return {\n      formInline: {\n        classNames: [],\n        supId: '',\n        supServiceId: ''\n      },\n      supInfoList: [],\n      supServiceList: [],\n      pipeList: [],\n      flag: false,\n      minutesArr: [],\n      timeId: null,\n      m: 0\n    };\n  },\n  methods: {\n    services: function services() {\n      var _this = this;\n\n      var url = '/operation/upper/querySupInfoList';\n      $http(url, {}, 'get').then(function (res) {\n        _this.supInfoList = res.resData.supInfos;\n\n        if (_this.supInfoList.length) {\n          _this.formInline.supId = _this.supInfoList[0].supId;\n        }\n      });\n    },\n    querySupServiceList: function querySupServiceList() {\n      var _this2 = this;\n\n      var url = '/operation/upper/querySupServiceList';\n      $http(url, {}, 'get').then(function (res) {\n        _this2.supServiceList = res.resData.supServiceInfos;\n\n        if (_this2.supServiceList.length) {\n          _this2.formInline.supServiceId = _this2.supServiceList[0].supServiceId; // this.queryPipeList(this.formInline.supServiceId)\n        }\n      });\n    },\n    // queryPipeList (param) { // tedstetewtewt\n    //   let url = '/operation/upper/queryPipeList/' + param\n    //   $http(url, {}, 'get').then((res) => {\n    //     this.pipeList = res.resData.simplePipeInfos\n    //     if (this.pipeList.length) {\n    //       this.formInline.classNames[0] = this.pipeList[0].pipeName\n    //     }\n    //   })\n    // },\n    realTime: function realTime() {\n      var _this3 = this;\n\n      var startTime = +new Date('2018-11-20 17:25:36') - 1 * 24 * 3600 * 1000;\n      var arr = [];\n\n      for (var i = 0; i <= 1440; i++) {\n        arr.push(moment(startTime + i * 60 * 1000).format('YYYYMMDDHHmm'));\n      }\n\n      this.minutesArr = arr;\n      var url = '/qualityanalyze/supplier/realTime';\n      this.formInline.date = moment(+new Date()).format('YYYY-MM-DD HH:mm:ss');\n      $http(url, this.formInline).then(function (res) {\n        var myChart = echarts.init(_this3.$refs.charts);\n        myChart.clear();\n        var dataArr = Object.keys(res.resData.avgCallTime);\n        /* 因为返回是个对象 所以提取对象的key并组成一个数组 这是平均相应时长*/\n\n        if (dataArr && dataArr.length > 0) {\n          _this3.flag = true;\n          var data = res.resData.avgCallTime;\n          var dataCall = res.resData.callNum;\n          var xFiled = [];\n          /* x轴数据 */\n\n          var yFiled = [];\n          /* y平均响应时间y轴数据 */\n\n          var yCallFiled = [];\n          /* 平均调用量y轴数据 */\n\n          var handleObj = {};\n\n          _this3.minutesArr.forEach(function (v) {\n            if (data[v]) {\n              /* 检测某个点是否存在 则不动 反之 补一个空  这样写的好处 就是不会改变时间点的顺序 */\n              handleObj[v] = data[v];\n            } else {\n              handleObj[v] = '';\n            }\n          });\n\n          for (var k in handleObj) {\n            xFiled.push(_this3.substrTime(k));\n            /* x轴 */\n\n            yFiled.push(handleObj[k]);\n            /* y轴 */\n\n            if (dataCall[k]) {\n              yCallFiled.push(dataCall[k]);\n            } else {\n              yCallFiled.push('');\n            }\n          }\n\n          var lineData = [{\n            \"name\": \"实时响应分析(ms)\",\n            type: 'line',\n            smooth: true,\n            //是否平滑曲线显示\n            lineStyle: {\n              //线条样式 \n              normal: {\n                width: 1,\n                color: 'rgba(44,181,171, 1)'\n              }\n            },\n            areaStyle: {\n              //区域填充样式\n              normal: {\n                //线性渐变，前4个参数分别是x0,y0,x2,y2(范围0~1);相当于图形包围盒中的百分比。如果最后一个参数是‘true’，则该四个值是绝对像素位置。\n                color: 'rgba(44,181,171, 0.3)'\n              }\n            },\n            itemStyle: {\n              //折现拐点标志的样式\n              normal: {\n                color: 'rgba(44,181,171, 1)'\n              }\n            },\n            \"data\": yFiled\n          }, {\n            \"name\": \"实时调用量(条)\",\n            yAxisIndex: 1,\n            type: 'line',\n            smooth: true,\n            //是否平滑曲线显示\n            lineStyle: {\n              //线条样式 \n              normal: {\n                width: 1,\n                color: 'rgb(248,168,159)'\n              }\n            },\n            areaStyle: {\n              //区域填充样式\n              normal: {\n                //线性渐变，前4个参数分别是x0,y0,x2,y2(范围0~1);相当于图形包围盒中的百分比。如果最后一个参数是‘true’，则该四个值是绝对像素位置。\n                color: 'rgb(248,168,159,0.3)'\n              }\n            },\n            itemStyle: {\n              //折现拐点标志的样式\n              normal: {\n                color: 'rgb(248,168,159)'\n              }\n            },\n            \"data\": yCallFiled\n          }];\n          myChart.setOption(setOtherLineData(xFiled, lineData));\n\n          window.onresize = function () {\n            myChart.resize();\n          };\n        } else {\n          _this3.flag = false;\n        }\n      });\n    },\n    onSubmit: function onSubmit() {\n      this.setIntervalFun();\n    },\n    substrTime: function substrTime(params) {\n      return params.substr(params.length - 4).substr(0, 2) + ':' + params.substr(params.length - 4).substr(2, 4);\n    },\n    setIntervalFun: function setIntervalFun() {\n      if (this.timeId) {\n        clearInterval(this.timeId);\n        /* 每次调用定时器 先清除定时器 */\n      }\n\n      this.realTime();\n      /* 第一次调用 */\n\n      this.timeId = setInterval(this.playerInterVal, 1000 * 60);\n    },\n    playerInterVal: function playerInterVal() {\n      this.m++;\n\n      if (this.m > 20) {\n        /* 执行20次以后清除定时器 */\n        this.m = 0;\n        this.setIntervalFun();\n        /* 重启定时器 */\n      } else {\n        this.realTime();\n      }\n    },\n    changeValue: function changeValue(value) {// this.queryPipeList(value)\n    }\n  },\n  mounted: function mounted() {\n    this.services();\n    this.querySupServiceList();\n  }\n};",{"version":3,"sources":["SupplierAnalysis.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"template-wrapper\">\r\n    <div class=\"card-wrapper\">\r\n      <div class=\"card-title\">\r\n        查询条件\r\n      </div>\r\n      <div class=\"card-container\">\r\n        <el-form :inline=\"true\" :model=\"formInline\" class=\"demo-form-inline\">\r\n          <el-form-item label=\"供应商名称：\">\r\n            <el-select v-model.trim=\"formInline.supId\"\r\n              filterable\r\n              v-if=\"supInfoList.length\"\r\n              placeholder=\"请选择\">\r\n              <el-option\r\n                v-for=\"item in supInfoList\"\r\n                :key=\"item.supId\"\r\n                :label=\"item.supName\"\r\n                :value=\"item.supId\">\r\n                <span style=\"float: left\">{{ item.supName }}</span>\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"供应商服务名称：\">\r\n            <el-select v-model.trim=\"formInline.supServiceId\"\r\n              filterable\r\n              v-if=\"supServiceList.length\"\r\n              @change=\"changeValue\"\r\n              placeholder=\"请选择\">\r\n              <el-option\r\n                v-for=\"item in supServiceList\"\r\n                :key=\"item.supServiceId\"\r\n                :label=\"item.supServiceNameCn\"\r\n                :value=\"item.supServiceId\">\r\n                <span style=\"float: left\">{{ item.supServiceNameCn }}</span>\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item class=\"specail-item\" v-if=\"pipeList && pipeList.length\" label=\"通道名称：\">\r\n            <el-select v-model.trim=\"formInline.classNames\"\r\n              multiple\r\n              filterable\r\n              collapse-tags\r\n              placeholder=\"请选择\">\r\n              <el-option\r\n                v-for=\"item in pipeList\"\r\n                :key=\"item.pipeId\"\r\n                :label=\"item.pipeName\"\r\n                :value=\"item.pipeId\">\r\n                <span style=\"float: left\">{{ item.pipeName }}</span>\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item class=\"card-query\">\r\n            <el-button type=\"primary\" @click=\"onSubmit\" round>查询</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n    </div>\r\n    <div class=\"card-wrapper card-content\">\r\n      <div class=\"card-title\">\r\n        查询结果\r\n      </div>\r\n      <div class=\"card-container\">\r\n        <div :class=\"flag ?'':'no-charts'\" ref=\"charts\" style=\"height:400px;\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import $http from '../common/js/api'\r\n  import moment from 'moment'\r\n  import { setOtherLineData } from '../common/js/myCharts'\r\n  import echarts from 'echarts'\r\n  export default {\r\n    data() {\r\n      return {\r\n        formInline: {\r\n          classNames: [],\r\n          supId: '',\r\n          supServiceId: ''\r\n        },\r\n        supInfoList: [],\r\n        supServiceList: [],\r\n        pipeList: [],\r\n        flag: false,\r\n        minutesArr: [],\r\n        timeId: null,\r\n        m: 0\r\n      }\r\n    },\r\n    methods: {\r\n      services () {\r\n        let url = '/operation/upper/querySupInfoList'\r\n        $http(url, {}, 'get').then((res) => {\r\n          this.supInfoList = res.resData.supInfos\r\n          if (this.supInfoList.length) {\r\n            this.formInline.supId = this.supInfoList[0].supId\r\n          }\r\n        })\r\n      },\r\n      querySupServiceList () {\r\n        let url = '/operation/upper/querySupServiceList'\r\n         $http(url, {}, 'get').then((res) => {\r\n          this.supServiceList = res.resData.supServiceInfos\r\n          if (this.supServiceList.length) {\r\n            this.formInline.supServiceId = this.supServiceList[0].supServiceId\r\n            // this.queryPipeList(this.formInline.supServiceId)\r\n          }\r\n        })\r\n      },\r\n      // queryPipeList (param) { // tedstetewtewt\r\n      //   let url = '/operation/upper/queryPipeList/' + param\r\n      //   $http(url, {}, 'get').then((res) => {\r\n      //     this.pipeList = res.resData.simplePipeInfos\r\n      //     if (this.pipeList.length) {\r\n      //       this.formInline.classNames[0] = this.pipeList[0].pipeName\r\n      //     }\r\n      //   })\r\n      // },\r\n      realTime () {\r\n        let startTime = + new Date('2018-11-20 17:25:36') - 1 * 24 * 3600 * 1000\r\n        let arr = []\r\n        for (let i = 0; i <= 1440; i++) {\r\n          arr.push(moment(startTime + (i * 60 * 1000)).format('YYYYMMDDHHmm'))\r\n        }\r\n        this.minutesArr = arr\r\n        let url = '/qualityanalyze/supplier/realTime'\r\n        this.formInline.date = moment(+new Date()).format('YYYY-MM-DD HH:mm:ss')\r\n        $http(url, this.formInline).then((res) => {\r\n          var myChart = echarts.init(this.$refs.charts)\r\n          myChart.clear()\r\n          let dataArr = Object.keys(res.resData.avgCallTime) /* 因为返回是个对象 所以提取对象的key并组成一个数组 这是平均相应时长*/\r\n          if (dataArr && dataArr.length > 0) {\r\n            this.flag = true\r\n            let data = res.resData.avgCallTime\r\n            let dataCall = res.resData.callNum\r\n            let xFiled = [] /* x轴数据 */\r\n            let yFiled = [] /* y平均响应时间y轴数据 */\r\n            let yCallFiled = [] /* 平均调用量y轴数据 */\r\n            let handleObj = {}\r\n            this.minutesArr.forEach(v => {\r\n              if (data[v]) { /* 检测某个点是否存在 则不动 反之 补一个空  这样写的好处 就是不会改变时间点的顺序 */\r\n                handleObj[v] = data[v]\r\n              } else {\r\n                handleObj[v] = ''\r\n              }\r\n            })\r\n            for (let k in handleObj) {\r\n              xFiled.push(this.substrTime(k)) /* x轴 */\r\n              yFiled.push(handleObj[k]) /* y轴 */\r\n              if (dataCall[k]) {\r\n                yCallFiled.push(dataCall[k])\r\n              } else {\r\n                yCallFiled.push('')\r\n              }\r\n            }\r\n            let lineData = [{\r\n              \"name\": \"实时响应分析(ms)\",\r\n              type: 'line',\r\n              smooth: true, //是否平滑曲线显示\r\n              lineStyle: { //线条样式 \r\n                normal: {\r\n                  width: 1,\r\n                  color: 'rgba(44,181,171, 1)'\r\n                }\r\n              },\r\n              areaStyle: { //区域填充样式\r\n                normal: {\r\n                  //线性渐变，前4个参数分别是x0,y0,x2,y2(范围0~1);相当于图形包围盒中的百分比。如果最后一个参数是‘true’，则该四个值是绝对像素位置。\r\n                  color: 'rgba(44,181,171, 0.3)'\r\n                }\r\n              },\r\n              itemStyle: { //折现拐点标志的样式\r\n                normal: {\r\n                  color: 'rgba(44,181,171, 1)'\r\n                }\r\n              },\r\n              \"data\": yFiled\r\n            }, {\r\n              \"name\": \"实时调用量(条)\",\r\n              yAxisIndex: 1,\r\n              type: 'line',\r\n              smooth: true, //是否平滑曲线显示\r\n              lineStyle: { //线条样式 \r\n                normal: {\r\n                  width: 1,\r\n                  color: 'rgb(248,168,159)'\r\n                }\r\n              },\r\n              areaStyle: { //区域填充样式\r\n                normal: {\r\n                  //线性渐变，前4个参数分别是x0,y0,x2,y2(范围0~1);相当于图形包围盒中的百分比。如果最后一个参数是‘true’，则该四个值是绝对像素位置。\r\n                  color: 'rgb(248,168,159,0.3)'\r\n                }\r\n              },\r\n              itemStyle: { //折现拐点标志的样式\r\n                normal: {\r\n                  color: 'rgb(248,168,159)'\r\n                }\r\n              },\r\n              \"data\": yCallFiled\r\n            }]\r\n            myChart.setOption(setOtherLineData(xFiled, lineData))\r\n            window.onresize = function () {\r\n              myChart.resize()\r\n            }\r\n          } else {\r\n            this.flag = false\r\n          }\r\n        })\r\n      },\r\n      onSubmit () {\r\n        this.setIntervalFun()\r\n      },\r\n      substrTime (params) {\r\n        return params.substr(params.length - 4).substr(0, 2) + ':' + params.substr(params.length - 4).substr(2, 4)\r\n      },\r\n      setIntervalFun () {\r\n        if (this.timeId) {\r\n          clearInterval(this.timeId); /* 每次调用定时器 先清除定时器 */\r\n        }\r\n        this.realTime() /* 第一次调用 */\r\n        this.timeId = setInterval(this.playerInterVal, 1000 * 60);\r\n      },\r\n      playerInterVal () {\r\n        this.m++\r\n        if (this.m > 20) { /* 执行20次以后清除定时器 */\r\n          this.m= 0\r\n          this.setIntervalFun() /* 重启定时器 */\r\n        } else {\r\n          this.realTime()\r\n        }\r\n      },\r\n      changeValue (value) {\r\n        // this.queryPipeList(value)\r\n      }\r\n    },\r\n    mounted() {\r\n      this.services()\r\n      this.querySupServiceList()\r\n    }\r\n  }\r\n</script>"],"sourceRoot":"src\\components"}]}