{"remainingRequest":"D:\\operate_system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\operate_system\\src\\components\\QualityAnalysis.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\operate_system\\src\\components\\QualityAnalysis.vue","mtime":1543376220520},{"path":"D:\\operate_system\\node_modules\\babel-loader\\lib\\index.js","mtime":1542166452696},{"path":"D:\\operate_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1542166466337},{"path":"D:\\operate_system\\node_modules\\vue-loader\\lib\\index.js","mtime":1542166473519}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n/* eslint-disable */\r\n  import $http from '../common/js/api'\r\n  import moment from 'moment'\r\n  import Pagination from '../base/Pagination'\r\n  export default {\r\n    data() {\r\n      return {\r\n        currentPage: 1,\r\n        pageSize: 10,\r\n        tatalPage: 0,\r\n        serviceArr: [],\r\n        serviceName: '',\r\n        loginName: '',\r\n        search: '',\r\n        customerArr: [],\r\n        tableData: [],\r\n        flag: false,\r\n        time: [new Date().getTime() - 3600 * 1000 * 24 * 7,new Date()],\r\n        pickerOptions2: {\r\n          shortcuts: [{\r\n            text: '最近一周',\r\n            onClick(picker) {\r\n              const end = new Date();\r\n              const start = new Date();\r\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n              picker.$emit('pick', [start, end]);\r\n            }\r\n          }, {\r\n            text: '最近一个月',\r\n            onClick(picker) {\r\n              const end = new Date();\r\n              const start = new Date();\r\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n              picker.$emit('pick', [start, end]);\r\n            }\r\n          }, {\r\n            text: '最近三个月',\r\n            onClick(picker) {\r\n              const end = new Date();\r\n              const start = new Date();\r\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\r\n              picker.$emit('pick', [start, end]);\r\n            }\r\n          }]\r\n        }\r\n      }\r\n    },\r\n    components: {\r\n      Pagination\r\n    },\r\n    methods: {\r\n      changePage (value) {\r\n        this[value.split('-')[0]] = value.split('-')[1] / 1\r\n      },\r\n      getSummaries(param) {\r\n        const { columns, data } = param\r\n        const sums = []\r\n        columns.forEach((column, index) => {\r\n          if (index === 0) {\r\n            sums[index] = '合计'\r\n            return\r\n          }\r\n          if (index === 1 || index === 2 || index === 3) {\r\n            sums[index] = '-'\r\n            return\r\n          }\r\n        const values = this.tableData.map(item => Number(item[column.property]))\r\n        if (!values.every(value => isNaN(value))) {\r\n          sums[index] = values.reduce((prev, curr) => {\r\n            const value = Number(curr)\r\n            if (!isNaN(value)) {\r\n              return prev + curr\r\n            } else {\r\n              return prev\r\n            }\r\n          }, 0)\r\n          sums[index]\r\n          } else {\r\n            sums[index] = ''\r\n          }\r\n        })\r\n        return sums\r\n      },\r\n      services () {\r\n        let url = '/operation/down/queryServices'\r\n        $http(url, {}, 'get').then((res) => {\r\n          this.serviceArr = res.resData\r\n          if (this.serviceArr && this.serviceArr.length) {\r\n            this.serviceName = this.serviceArr[0].serviceName\r\n            this.queryCustomersByService(this.serviceArr[0].serviceName)\r\n          }\r\n        })\r\n      },\r\n      queryCustomersByService (param) {\r\n        let url = '/operation/down/queryCustomersByService/' + param\r\n        $http(url, {}, 'get').then((res) => {\r\n          this.customerArr = res.resData\r\n          if (this.customerArr && this.customerArr.length) {\r\n            this.loginName = this.customerArr[0].loginName\r\n          } else {\r\n            this.loginName = ''\r\n          }\r\n        })\r\n      },\r\n      UsageByResult (opt) {\r\n        let url = '/operator/down/UsageByResult'\r\n        $http(url, opt).then((res) => {\r\n          this.tableData = res.resData\r\n          this.tatalPage = res.resData.length\r\n        })\r\n      },\r\n      changeValue (value) {\r\n        \r\n        this.queryCustomersByService(value)\r\n      },\r\n      handleSizeChange(val) {\r\n        if (val) {\r\n          this.pageSize = val\r\n        } else {\r\n          this.pageSize = this.tableData.length\r\n        }\r\n      },\r\n      filterTable (data) {\r\n        return !this.search || (data.serviceNameZh+'').toLowerCase().includes(this.search.toLowerCase()) || (data.serviceName+'').toLowerCase().includes(this.search.toLowerCase()) || data.resultCode.toLowerCase().includes(this.search.toLowerCase())  || (data.result+'').toLowerCase().includes(this.search.toLowerCase())\r\n      },\r\n      handleCurrentChange(val) {\r\n        this.currentPage = val\r\n      },\r\n      onSubmit () {\r\n        const start = moment(this.time[0]).format('YYYY-MM-DD')\r\n        const end = moment(this.time[1]).format('YYYY-MM-DD')\r\n        const loginName = this.loginName\r\n        const serviceName = this.serviceName\r\n        const businessType = ''\r\n        let opt = {\r\n          start,\r\n          end,\r\n          loginName,\r\n          serviceName,\r\n          businessType\r\n        }\r\n        this.UsageByResult(opt)\r\n      },\r\n      formatterMoney (value) {\r\n        return value.downCost = Math.round(value.downCost * 100) / 100\r\n      }\r\n    },\r\n    mounted() {\r\n      this.services()\r\n    },\r\n    computed: {\r\n      tableDataComputed () {\r\n        if (this.tableData && this.tableData.length) {\r\n          let start = this.pageSize * (this.currentPage -1)\r\n          let end = Math.min(this.pageSize * (this.currentPage), this.tableData.length)\r\n          return this.tableData.slice(start, end)\r\n        } else {\r\n          return []\r\n        }\r\n      }\r\n    }\r\n  }\r\n",{"version":3,"sources":["QualityAnalysis.vue"],"names":[],"mappingsfile":"QualityAnalysis.vue","sourceRoot":"src\\components","sourcesContent":["<template>\r\n  <div class=\"template-wrapper\">\r\n    <div class=\"card-wrapper\">\r\n      <div class=\"card-title\">\r\n        查询条件\r\n      </div>\r\n      <div class=\"card-container\">\r\n        <el-form :inline=\"true\" class=\"demo-form-inline\">\r\n          <el-form-item label=\"选择时间：\">\r\n            <el-date-picker\r\n              v-model=\"time\"\r\n              type=\"daterange\"\r\n              align=\"right\"\r\n              unlink-panels\r\n              range-separator=\"至\"\r\n              start-placeholder=\"开始日期\"\r\n              end-placeholder=\"结束日期\"\r\n              :picker-options=\"pickerOptions2\">\r\n            </el-date-picker>\r\n          </el-form-item>\r\n          <el-form-item label=\"服务名称：\">\r\n            <el-select v-model.trim=\"serviceName\"\r\n              filterable\r\n              @change=\"changeValue\"\r\n              placeholder=\"请选择\">\r\n              <el-option\r\n                v-for=\"item in serviceArr\"\r\n                :key=\"item.serviceName\"\r\n                :label=\"item.serviceNameZh\"\r\n                :value=\"item.serviceName\">\r\n                <span style=\"float: left\">{{ item.serviceNameZh }}</span>\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"客户类型：\">\r\n            <el-select v-model.trim=\"loginName\"\r\n              filterable\r\n              placeholder=\"请选择\">\r\n              <el-option\r\n                v-for=\"item in customerArr\"\r\n                :key=\"item.loginName\"\r\n                :label=\"item.customerName\"\r\n                :value=\"item.loginName\">\r\n                <span style=\"float: left\">{{ item.customerName }}</span>\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item class=\"card-query\">\r\n            <el-button type=\"primary\" @click=\"onSubmit\" round>查询</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n    </div>\r\n    <div class=\"card-wrapper card-content\">\r\n      <div class=\"card-title\">\r\n        查询结果\r\n      </div>\r\n      <div class=\"card-container\">\r\n         <el-table\r\n          :data=\"tableDataComputed.filter(data => filterTable(data))\"\r\n          :show-summary=true\r\n          :summary-method=\"getSummaries\"\r\n          style=\"width: 100%\">\r\n          <el-table-column\r\n            label=\"服务名\"\r\n            sortable\r\n            prop=\"serviceName\">\r\n          </el-table-column>\r\n          <el-table-column\r\n            label=\"服务名称\"\r\n            sortable\r\n            prop=\"serviceNameZh\">\r\n          </el-table-column>\r\n          <el-table-column\r\n            label=\"RESULT\"\r\n            sortable\r\n            prop=\"result\">\r\n          </el-table-column>\r\n          <el-table-column\r\n            label=\"resultCode\"\r\n            sortable\r\n            prop=\"resultCode\">\r\n          </el-table-column>\r\n          <el-table-column\r\n            label=\"共计使用量\"\r\n            sortable\r\n            prop=\"usedCount\">\r\n          </el-table-column>\r\n          <el-table-column\r\n            label=\"计费使用量\"\r\n            sortable\r\n            prop=\"downChargedCount\">\r\n          </el-table-column>\r\n          <el-table-column\r\n            align=\"right\">\r\n            <template slot=\"header\" slot-scope=\"slot\">\r\n              <el-input\r\n                v-model=\"search\"\r\n                size=\"mini\"\r\n                placeholder=\"输入关键字\"/>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n         <pagination @changePage=\"changePage\" :tatalPage=\"tatalPage\"></pagination>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable */\r\n  import $http from '../common/js/api'\r\n  import moment from 'moment'\r\n  import Pagination from '../base/Pagination'\r\n  export default {\r\n    data() {\r\n      return {\r\n        currentPage: 1,\r\n        pageSize: 10,\r\n        tatalPage: 0,\r\n        serviceArr: [],\r\n        serviceName: '',\r\n        loginName: '',\r\n        search: '',\r\n        customerArr: [],\r\n        tableData: [],\r\n        flag: false,\r\n        time: [new Date().getTime() - 3600 * 1000 * 24 * 7,new Date()],\r\n        pickerOptions2: {\r\n          shortcuts: [{\r\n            text: '最近一周',\r\n            onClick(picker) {\r\n              const end = new Date();\r\n              const start = new Date();\r\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n              picker.$emit('pick', [start, end]);\r\n            }\r\n          }, {\r\n            text: '最近一个月',\r\n            onClick(picker) {\r\n              const end = new Date();\r\n              const start = new Date();\r\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n              picker.$emit('pick', [start, end]);\r\n            }\r\n          }, {\r\n            text: '最近三个月',\r\n            onClick(picker) {\r\n              const end = new Date();\r\n              const start = new Date();\r\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\r\n              picker.$emit('pick', [start, end]);\r\n            }\r\n          }]\r\n        }\r\n      }\r\n    },\r\n    components: {\r\n      Pagination\r\n    },\r\n    methods: {\r\n      changePage (value) {\r\n        this[value.split('-')[0]] = value.split('-')[1] / 1\r\n      },\r\n      getSummaries(param) {\r\n        const { columns, data } = param\r\n        const sums = []\r\n        columns.forEach((column, index) => {\r\n          if (index === 0) {\r\n            sums[index] = '合计'\r\n            return\r\n          }\r\n          if (index === 1 || index === 2 || index === 3) {\r\n            sums[index] = '-'\r\n            return\r\n          }\r\n        const values = this.tableData.map(item => Number(item[column.property]))\r\n        if (!values.every(value => isNaN(value))) {\r\n          sums[index] = values.reduce((prev, curr) => {\r\n            const value = Number(curr)\r\n            if (!isNaN(value)) {\r\n              return prev + curr\r\n            } else {\r\n              return prev\r\n            }\r\n          }, 0)\r\n          sums[index]\r\n          } else {\r\n            sums[index] = ''\r\n          }\r\n        })\r\n        return sums\r\n      },\r\n      services () {\r\n        let url = '/operation/down/queryServices'\r\n        $http(url, {}, 'get').then((res) => {\r\n          this.serviceArr = res.resData\r\n          if (this.serviceArr && this.serviceArr.length) {\r\n            this.serviceName = this.serviceArr[0].serviceName\r\n            this.queryCustomersByService(this.serviceArr[0].serviceName)\r\n          }\r\n        })\r\n      },\r\n      queryCustomersByService (param) {\r\n        let url = '/operation/down/queryCustomersByService/' + param\r\n        $http(url, {}, 'get').then((res) => {\r\n          this.customerArr = res.resData\r\n          if (this.customerArr && this.customerArr.length) {\r\n            this.loginName = this.customerArr[0].loginName\r\n          } else {\r\n            this.loginName = ''\r\n          }\r\n        })\r\n      },\r\n      UsageByResult (opt) {\r\n        let url = '/operator/down/UsageByResult'\r\n        $http(url, opt).then((res) => {\r\n          this.tableData = res.resData\r\n          this.tatalPage = res.resData.length\r\n        })\r\n      },\r\n      changeValue (value) {\r\n        \r\n        this.queryCustomersByService(value)\r\n      },\r\n      handleSizeChange(val) {\r\n        if (val) {\r\n          this.pageSize = val\r\n        } else {\r\n          this.pageSize = this.tableData.length\r\n        }\r\n      },\r\n      filterTable (data) {\r\n        return !this.search || (data.serviceNameZh+'').toLowerCase().includes(this.search.toLowerCase()) || (data.serviceName+'').toLowerCase().includes(this.search.toLowerCase()) || data.resultCode.toLowerCase().includes(this.search.toLowerCase())  || (data.result+'').toLowerCase().includes(this.search.toLowerCase())\r\n      },\r\n      handleCurrentChange(val) {\r\n        this.currentPage = val\r\n      },\r\n      onSubmit () {\r\n        const start = moment(this.time[0]).format('YYYY-MM-DD')\r\n        const end = moment(this.time[1]).format('YYYY-MM-DD')\r\n        const loginName = this.loginName\r\n        const serviceName = this.serviceName\r\n        const businessType = ''\r\n        let opt = {\r\n          start,\r\n          end,\r\n          loginName,\r\n          serviceName,\r\n          businessType\r\n        }\r\n        this.UsageByResult(opt)\r\n      },\r\n      formatterMoney (value) {\r\n        return value.downCost = Math.round(value.downCost * 100) / 100\r\n      }\r\n    },\r\n    mounted() {\r\n      this.services()\r\n    },\r\n    computed: {\r\n      tableDataComputed () {\r\n        if (this.tableData && this.tableData.length) {\r\n          let start = this.pageSize * (this.currentPage -1)\r\n          let end = Math.min(this.pageSize * (this.currentPage), this.tableData.length)\r\n          return this.tableData.slice(start, end)\r\n        } else {\r\n          return []\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>"]}]}