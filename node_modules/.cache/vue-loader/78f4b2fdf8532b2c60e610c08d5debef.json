{"remainingRequest":"D:\\operate_system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\operate_system\\src\\components\\query-index\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\operate_system\\src\\components\\query-index\\index.vue","mtime":1543390036375},{"path":"D:\\operate_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1542166466337},{"path":"D:\\operate_system\\node_modules\\babel-loader\\lib\\index.js","mtime":1542166452696},{"path":"D:\\operate_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1542166466337},{"path":"D:\\operate_system\\node_modules\\vue-loader\\lib\\index.js","mtime":1542166473519}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport moment from 'moment'\r\nimport $http from '../../common/js/api'\r\nimport { setOtherLineData } from '../../common/js/myCharts'\r\nimport echarts from 'echarts'\r\nexport default {\r\n  data () {\r\n    return {\r\n      currentPage: 1,\r\n      pageSize: 10,\r\n      tatalPage: 0,\r\n      formInline: {\r\n        user: '',\r\n        region: ''\r\n      },\r\n      pickerOptions2: {\r\n        disabledDate (time) {\r\n          return time.getTime() > Date.now() || time.getTime() < new Date('2018-09-30')\r\n        },\r\n        shortcuts: [{\r\n          text: '最近一周',\r\n          onClick (picker) {\r\n            const end = new Date();\r\n            const start = new Date();\r\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n            picker.$emit('pick', [start, end]);\r\n          }\r\n        }, {\r\n          text: '最近一个月',\r\n          onClick (picker) {\r\n            const end = new Date();\r\n            const start = new Date();\r\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n            picker.$emit('pick', [start, end]);\r\n          }\r\n        }]\r\n      },\r\n      time: [new Date().getTime() - 3600 * 1000 * 24 * 7, new Date()],/**默认时间最近七天 */\r\n      tableDataService: [],\r\n      tableDataDay: [],\r\n      search: ''\r\n    }\r\n  },\r\n  mounted () {\r\n    this.UsageByDate()\r\n  },\r\n  computed: {\r\n    tableDataComputed () {\r\n      if (this.tableDataService && this.tableDataService.length) {\r\n        let start = this.pageSize * (this.currentPage - 1)\r\n        let end = Math.min(this.pageSize * (this.currentPage), this.tableDataService.length)\r\n        return this.tableDataService.slice(start, end)\r\n      } else {\r\n        return []\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    getSummaries (param) {\r\n      const { columns } = param\r\n      const sums = []\r\n      columns.forEach((column, index) => {\r\n        if (index === 0) {\r\n          sums[index] = '合计'\r\n          return\r\n        }\r\n        const values = this.tableDataService.map(item => Number(item[column.property]))\r\n        if (!values.every(value => isNaN(value))) {\r\n          sums[index] = values.reduce((prev, curr) => {\r\n            const value = Number(curr)\r\n            if (!isNaN(value)) {\r\n              return prev + curr\r\n            } else {\r\n              return prev\r\n            }\r\n          }, 0)\r\n          sums[index]\r\n        } else {\r\n          sums[index] = ''\r\n        }\r\n      })\r\n      sums.forEach((v, k) => {\r\n        if (Number(v)) {\r\n          sums[k] = Math.round(v * 100) / 100\r\n        }\r\n      })\r\n      return sums\r\n    },\r\n    onSubmit () {\r\n      this.UsageByDate()\r\n    },\r\n    handleSizeChange (val) {\r\n      if (val) {\r\n        this.pageSize = val\r\n      } else {\r\n        this.pageSize = this.tableDataDay.length\r\n      }\r\n    },\r\n    filterTable (data) {\r\n      return !this.search || (data.chargeUsedCount + '').toLowerCase().includes(this.search.toLowerCase()) || (data.serviceNameZh + '').toLowerCase().includes(this.search.toLowerCase()) || data.serviceName.toLowerCase().includes(this.search.toLowerCase()) || (data.chargeUsedCount + '').toLowerCase().includes(this.search.toLowerCase())\r\n    },\r\n    handleCurrentChange (val) {\r\n      this.currentPage = val\r\n    },\r\n    UsageByDate () {\r\n      let url = '/operator/up/getOutServiceChargeInfoBySupplier'\r\n      let data = {\r\n        start: moment(this.time[0]).format('YYYY-MM-DD'),\r\n        end: moment(this.time[1]).format('YYYY-MM-DD'),\r\n        companyName: 'chaxunzhongxin'\r\n      }\r\n      var myChart = echarts.init(this.$refs.charts)\r\n      myChart.clear()\r\n      let that = this\r\n      $http(url, data).then((res) => {\r\n        that.tableDataService = []\r\n        var xFiled = {},\r\n          finalArr = {}\r\n        that.tableDataDay = res.resData.dayCompany\r\n        that.tableDataService = res.resData.serviceCompany\r\n        if (that.tableDataDay && that.tableDataDay.length) {\r\n          that.tableDataDay.forEach((v, k) => {\r\n            v.noChargeCount = v.usedCount - v.chargeUsedCount\r\n            v.cost = v.cost.toFixed(2)\r\n            var dayKey = v.dayTime,\r\n              serviceKey = v.serviceName\r\n            if (!finalArr[v.serviceName]) {//是以服务名为主线  查看服务名是否已经存储\r\n              finalArr[v.serviceName] = {\r\n                name: v.serviceNameZh,\r\n                dataArr: []\r\n              }\r\n            }\r\n            if (xFiled[dayKey]) {//如果日期存在  则将对应的服务名及对应的使用量生成key value\r\n              xFiled[dayKey][serviceKey] = v.usedCount\r\n            } else {\r\n              xFiled[dayKey] = {};//如果日期不存在  则生成一个空对象\r\n            }\r\n            xFiled[dayKey][serviceKey] = v.usedCount\r\n          })\r\n        }\r\n        if (that.tableDataService && that.tableDataService.length) {\r\n          that.tableDataService.forEach((v, k) => {\r\n            v.noChargeCount = v.usedCount - v.chargeUsedCount\r\n            that.tableDataService[k].cost = that.tableDataService[k].cost.toFixed(2)\r\n          })\r\n        }\r\n\r\n\r\n        var nuqinexFild = []\r\n        for (var k in xFiled) {\r\n          nuqinexFild.push(k)\r\n          for (let k1 in finalArr) {\r\n            if (xFiled[k][k1]) {\r\n              finalArr[k1].dataArr.push(xFiled[k][k1])\r\n            } else {\r\n              finalArr[k1].dataArr.push(0)\r\n            }\r\n          }\r\n        }\r\n        var mycolor = ['#86D560', '#AF89D6', '#59ADF3', '#FF999A', '#FFCC67', '#2cb5ab', '#91bf5d', '#f8a89f', '#00FFFF', '#7FFFAA', '#2E8B57', '#F5F5DC', '#BC8F8F', '\t#808080'];\r\n        var k = 0,\r\n          lineData = []\r\n        for (let k3 in finalArr) {\r\n          lineData.push({\r\n            name: finalArr[k3].name,\r\n            type: 'line',\r\n            smooth: true,\r\n            lineStyle: {\r\n              normal: {\r\n                width: 1,\r\n                color: mycolor[k]\r\n              }\r\n            },\r\n            areaStyle: {\r\n              normal: {\r\n                color: mycolor[k]\r\n              }\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                color: mycolor[k]\r\n              }\r\n            },\r\n            \"data\": finalArr[k3].dataArr\r\n          })\r\n          k += 1\r\n        }\r\n        myChart.setOption(setOtherLineData(nuqinexFild, lineData))\r\n        window.onresize = function () {\r\n          myChart.resize()\r\n        }\r\n      }).catch(error => {\r\n        console.log(error)\r\n      })\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"src\\components\\query-index","sourcesContent":["<template>\r\n  <div class=\"template-wrapper\">\r\n    <div class=\"card-wrapper\">\r\n      <div class=\"card-title\">\r\n        查询条件\r\n      </div>\r\n      <div class=\"card-container\">\r\n        <el-form :inline=\"true\" :model=\"formInline\" class=\"demo-form-inline\">\r\n          <el-form-item label=\"选择时间：\">\r\n            <div class=\"block\">\r\n              <el-date-picker\r\n                v-model=\"time\"\r\n                type=\"daterange\"\r\n                align=\"right\"\r\n                unlink-panels\r\n                range-separator=\"至\"\r\n                start-placeholder=\"开始日期\"\r\n                end-placeholder=\"结束日期\"\r\n                :picker-options=\"pickerOptions2\">\r\n              </el-date-picker>\r\n            </div>\r\n          </el-form-item>\r\n          <el-form-item class=\"card-query\">\r\n            <el-button type=\"primary\" @click=\"onSubmit\" round>查询</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n    </div>\r\n    <div class=\"card-wrapper card-content\">\r\n      <div class=\"card-title\">\r\n        查询结果\r\n      </div>\r\n      <div class=\"card-container\">\r\n        <div :class=\"tableDataDay.length ?'':'no-charts'\" ref=\"charts\" style=\"height:400px;\"></div>\r\n      </div>\r\n    </div>\r\n    <div class=\"card-wrapper card-content\">\r\n      <div class=\"card-title\">\r\n        查询结果\r\n      </div>\r\n      <div class=\"card-container\">\r\n        <el-table\r\n          :data=\"tableDataComputed.filter(data => filterTable(data))\"\r\n          :show-summary=true\r\n          :summary-method=\"getSummaries\"\r\n          style=\"width: 100%\">\r\n          <el-table-column\r\n            label=\"服务名称\"\r\n            sortable\r\n            prop=\"serviceNameZh\">\r\n          </el-table-column>\r\n          <el-table-column\r\n            label=\"共计条数\"\r\n            sortable\r\n            prop=\"usedCount\">\r\n          </el-table-column>\r\n          <el-table-column\r\n            label=\"计费条数\"\r\n            sortable\r\n            prop=\"chargeUsedCount\">\r\n          </el-table-column>\r\n          <el-table-column\r\n            label=\"不计费条数\"\r\n            sortable\r\n            prop=\"noChargeCount\">\r\n          </el-table-column>\r\n          <el-table-column\r\n            align=\"right\">\r\n            <template slot=\"header\" slot-scope=\"slot\">\r\n              <el-input\r\n                v-model=\"search\"\r\n                size=\"mini\"\r\n                placeholder=\"Type to search\"/>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n        <el-pagination\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page=\"currentPage\"\r\n          :page-sizes=\"[10, 20, 50, 'all']\"\r\n          :page-size=\"pageSize\"\r\n          background\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"tatalPage\">\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport moment from 'moment'\r\nimport $http from '../../common/js/api'\r\nimport { setOtherLineData } from '../../common/js/myCharts'\r\nimport echarts from 'echarts'\r\nexport default {\r\n  data () {\r\n    return {\r\n      currentPage: 1,\r\n      pageSize: 10,\r\n      tatalPage: 0,\r\n      formInline: {\r\n        user: '',\r\n        region: ''\r\n      },\r\n      pickerOptions2: {\r\n        disabledDate (time) {\r\n          return time.getTime() > Date.now() || time.getTime() < new Date('2018-09-30')\r\n        },\r\n        shortcuts: [{\r\n          text: '最近一周',\r\n          onClick (picker) {\r\n            const end = new Date();\r\n            const start = new Date();\r\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n            picker.$emit('pick', [start, end]);\r\n          }\r\n        }, {\r\n          text: '最近一个月',\r\n          onClick (picker) {\r\n            const end = new Date();\r\n            const start = new Date();\r\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n            picker.$emit('pick', [start, end]);\r\n          }\r\n        }]\r\n      },\r\n      time: [new Date().getTime() - 3600 * 1000 * 24 * 7, new Date()],/**默认时间最近七天 */\r\n      tableDataService: [],\r\n      tableDataDay: [],\r\n      search: ''\r\n    }\r\n  },\r\n  mounted () {\r\n    this.UsageByDate()\r\n  },\r\n  computed: {\r\n    tableDataComputed () {\r\n      if (this.tableDataService && this.tableDataService.length) {\r\n        let start = this.pageSize * (this.currentPage - 1)\r\n        let end = Math.min(this.pageSize * (this.currentPage), this.tableDataService.length)\r\n        return this.tableDataService.slice(start, end)\r\n      } else {\r\n        return []\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    getSummaries (param) {\r\n      const { columns } = param\r\n      const sums = []\r\n      columns.forEach((column, index) => {\r\n        if (index === 0) {\r\n          sums[index] = '合计'\r\n          return\r\n        }\r\n        const values = this.tableDataService.map(item => Number(item[column.property]))\r\n        if (!values.every(value => isNaN(value))) {\r\n          sums[index] = values.reduce((prev, curr) => {\r\n            const value = Number(curr)\r\n            if (!isNaN(value)) {\r\n              return prev + curr\r\n            } else {\r\n              return prev\r\n            }\r\n          }, 0)\r\n          sums[index]\r\n        } else {\r\n          sums[index] = ''\r\n        }\r\n      })\r\n      sums.forEach((v, k) => {\r\n        if (Number(v)) {\r\n          sums[k] = Math.round(v * 100) / 100\r\n        }\r\n      })\r\n      return sums\r\n    },\r\n    onSubmit () {\r\n      this.UsageByDate()\r\n    },\r\n    handleSizeChange (val) {\r\n      if (val) {\r\n        this.pageSize = val\r\n      } else {\r\n        this.pageSize = this.tableDataDay.length\r\n      }\r\n    },\r\n    filterTable (data) {\r\n      return !this.search || (data.chargeUsedCount + '').toLowerCase().includes(this.search.toLowerCase()) || (data.serviceNameZh + '').toLowerCase().includes(this.search.toLowerCase()) || data.serviceName.toLowerCase().includes(this.search.toLowerCase()) || (data.chargeUsedCount + '').toLowerCase().includes(this.search.toLowerCase())\r\n    },\r\n    handleCurrentChange (val) {\r\n      this.currentPage = val\r\n    },\r\n    UsageByDate () {\r\n      let url = '/operator/up/getOutServiceChargeInfoBySupplier'\r\n      let data = {\r\n        start: moment(this.time[0]).format('YYYY-MM-DD'),\r\n        end: moment(this.time[1]).format('YYYY-MM-DD'),\r\n        companyName: 'chaxunzhongxin'\r\n      }\r\n      var myChart = echarts.init(this.$refs.charts)\r\n      myChart.clear()\r\n      let that = this\r\n      $http(url, data).then((res) => {\r\n        that.tableDataService = []\r\n        var xFiled = {},\r\n          finalArr = {}\r\n        that.tableDataDay = res.resData.dayCompany\r\n        that.tableDataService = res.resData.serviceCompany\r\n        if (that.tableDataDay && that.tableDataDay.length) {\r\n          that.tableDataDay.forEach((v, k) => {\r\n            v.noChargeCount = v.usedCount - v.chargeUsedCount\r\n            v.cost = v.cost.toFixed(2)\r\n            var dayKey = v.dayTime,\r\n              serviceKey = v.serviceName\r\n            if (!finalArr[v.serviceName]) {//是以服务名为主线  查看服务名是否已经存储\r\n              finalArr[v.serviceName] = {\r\n                name: v.serviceNameZh,\r\n                dataArr: []\r\n              }\r\n            }\r\n            if (xFiled[dayKey]) {//如果日期存在  则将对应的服务名及对应的使用量生成key value\r\n              xFiled[dayKey][serviceKey] = v.usedCount\r\n            } else {\r\n              xFiled[dayKey] = {};//如果日期不存在  则生成一个空对象\r\n            }\r\n            xFiled[dayKey][serviceKey] = v.usedCount\r\n          })\r\n        }\r\n        if (that.tableDataService && that.tableDataService.length) {\r\n          that.tableDataService.forEach((v, k) => {\r\n            v.noChargeCount = v.usedCount - v.chargeUsedCount\r\n            that.tableDataService[k].cost = that.tableDataService[k].cost.toFixed(2)\r\n          })\r\n        }\r\n\r\n\r\n        var nuqinexFild = []\r\n        for (var k in xFiled) {\r\n          nuqinexFild.push(k)\r\n          for (let k1 in finalArr) {\r\n            if (xFiled[k][k1]) {\r\n              finalArr[k1].dataArr.push(xFiled[k][k1])\r\n            } else {\r\n              finalArr[k1].dataArr.push(0)\r\n            }\r\n          }\r\n        }\r\n        var mycolor = ['#86D560', '#AF89D6', '#59ADF3', '#FF999A', '#FFCC67', '#2cb5ab', '#91bf5d', '#f8a89f', '#00FFFF', '#7FFFAA', '#2E8B57', '#F5F5DC', '#BC8F8F', '\t#808080'];\r\n        var k = 0,\r\n          lineData = []\r\n        for (let k3 in finalArr) {\r\n          lineData.push({\r\n            name: finalArr[k3].name,\r\n            type: 'line',\r\n            smooth: true,\r\n            lineStyle: {\r\n              normal: {\r\n                width: 1,\r\n                color: mycolor[k]\r\n              }\r\n            },\r\n            areaStyle: {\r\n              normal: {\r\n                color: mycolor[k]\r\n              }\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                color: mycolor[k]\r\n              }\r\n            },\r\n            \"data\": finalArr[k3].dataArr\r\n          })\r\n          k += 1\r\n        }\r\n        myChart.setOption(setOtherLineData(nuqinexFild, lineData))\r\n        window.onresize = function () {\r\n          myChart.resize()\r\n        }\r\n      }).catch(error => {\r\n        console.log(error)\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped lang=\"stylus\" rel=\"stylesheet/stylus\">\r\n</style>\r\n"]}]}